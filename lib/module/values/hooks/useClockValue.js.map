{"version":3,"sources":["useClockValue.ts"],"names":["useEffect","useMemo","ValueApi","useClockValue","clock","createClockValue","start","stop"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AAEA,SAASC,QAAT,QAAyB,QAAzB;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,QAAMC,KAAK,GAAGH,OAAO,CAAC,MAAMC,QAAQ,CAACG,gBAAT,EAAP,EAAoC,EAApC,CAArB;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAACE,KAAN;AACA,WAAOF,KAAK,CAACG,IAAb;AACD,GAHQ,EAGN,CAACH,KAAD,CAHM,CAAT;AAIA,SAAOA,KAAP;AACD,CAPM","sourcesContent":["import { useEffect, useMemo } from \"react\";\n\nimport { ValueApi } from \"../api\";\n\n/**\n * @returns A new value that will be updated on every frame redraw with the\n * number of milliseconds elapsed since the value was started.\n * The clock is created in the stopped state.\n */\n\nexport const useClockValue = () => {\n  const clock = useMemo(() => ValueApi.createClockValue(), []);\n  useEffect(() => {\n    clock.start();\n    return clock.stop;\n  }, [clock]);\n  return clock;\n};\n"]}