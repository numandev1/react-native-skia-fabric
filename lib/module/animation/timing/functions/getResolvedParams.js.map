{"version":3,"sources":["getResolvedParams.ts"],"names":["DefaultParameters","to","loop","yoyo","immediate","DefaultTimingConfig","duration","easing","t","getResolvedParams","toOrParams","config","resolvedParameters","from","resolvedConfig"],"mappings":"AAMA,MAAMA,iBAAiB,GAAG;AACxBC,EAAAA,EAAE,EAAE,CADoB;AAExBC,EAAAA,IAAI,EAAE,KAFkB;AAGxBC,EAAAA,IAAI,EAAE,KAHkB;AAIxBC,EAAAA,SAAS,EAAE;AAJa,CAA1B;AAOA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,IADgB;AAE1BC,EAAAA,MAAM,EAAGC,CAAD,IAAeA;AAFG,CAA5B;AAKA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,CAC/BC,UAD+B,EAE/BC,MAF+B,KAGsB;AACrD,MAAIC,kBAA2C,GAAG,EAChD,GAAGZ;AAD6C,GAAlD;;AAIA,MAAI,OAAOU,UAAP,KAAsB,QAA1B,EAAoC;AAClCE,IAAAA,kBAAkB,CAACX,EAAnB,GAAwBS,UAAxB;AACD,GAFD,MAEO;AAAA;;AACLE,IAAAA,kBAAkB,GAAG;AACnBC,MAAAA,IAAI,sBAAEH,UAAU,CAACG,IAAb,+DAAqBD,kBAAkB,CAACC,IADzB;AAEnBZ,MAAAA,EAAE,oBAAES,UAAU,CAACT,EAAb,2DAAmBW,kBAAkB,CAACX,EAFrB;AAGnBC,MAAAA,IAAI,sBAAEQ,UAAU,CAACR,IAAb,+DAAqBU,kBAAkB,CAACV,IAHzB;AAInBC,MAAAA,IAAI,sBAAEO,UAAU,CAACP,IAAb,+DAAqBS,kBAAkB,CAACT;AAJzB,KAArB;AAMD;;AAED,QAAMW,cAAsC,GAAG,EAAE,GAAGT;AAAL,GAA/C;;AACA,MAAIM,MAAJ,EAAY;AAAA;;AACVG,IAAAA,cAAc,CAACR,QAAf,uBAA0BK,MAAM,CAACL,QAAjC,+DAA6CD,mBAAmB,CAACC,QAAjE;AACAQ,IAAAA,cAAc,CAACP,MAAf,qBAAwBI,MAAM,CAACJ,MAA/B,2DAAyCF,mBAAmB,CAACE,MAA7D;AACD;;AAED,SAAO,EAAE,GAAGK,kBAAL;AAAyB,OAAGE;AAA5B,GAAP;AACD,CA1BM","sourcesContent":["import type {\n  RequiredAnimationParams,\n  AnimationParams,\n  TimingConfig,\n} from \"../../types\";\n\nconst DefaultParameters = {\n  to: 1,\n  loop: false,\n  yoyo: false,\n  immediate: true,\n};\n\nconst DefaultTimingConfig = {\n  duration: 1000,\n  easing: (t: number) => t,\n};\n\n/**\n * Resolves parameters from optional values to a single object\n * @param toOrParams Params or to value\n * @param config timing/spring configuration\n */\nexport const getResolvedParams = (\n  toOrParams: number | AnimationParams,\n  config?: TimingConfig\n): RequiredAnimationParams & Required<TimingConfig> => {\n  let resolvedParameters: RequiredAnimationParams = {\n    ...DefaultParameters,\n  };\n\n  if (typeof toOrParams === \"number\") {\n    resolvedParameters.to = toOrParams;\n  } else {\n    resolvedParameters = {\n      from: toOrParams.from ?? resolvedParameters.from,\n      to: toOrParams.to ?? resolvedParameters.to,\n      loop: toOrParams.loop ?? resolvedParameters.loop,\n      yoyo: toOrParams.yoyo ?? resolvedParameters.yoyo,\n    };\n  }\n\n  const resolvedConfig: Required<TimingConfig> = { ...DefaultTimingConfig };\n  if (config) {\n    resolvedConfig.duration = config.duration ?? DefaultTimingConfig.duration;\n    resolvedConfig.easing = config.easing ?? DefaultTimingConfig.easing;\n  }\n\n  return { ...resolvedParameters, ...resolvedConfig };\n};\n"]}