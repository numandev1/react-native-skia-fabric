{"version":3,"sources":["GroupNode.ts"],"names":["NodeType","JsiRenderNode","GroupNode","constructor","ctx","props","Group","renderNode","children","map","child","render"],"mappings":"AACA,SAASA,QAAT,QAAyB,UAAzB;AAGA,SAASC,aAAT,QAA8B,cAA9B;AAGA,OAAO,MAAMC,SAAN,SACGD,aADH,CAGP;AACEE,EAAAA,WAAW,CAACC,GAAD,EAAmBC,KAAnB,EAAsC;AAC/C,UAAMD,GAAN,EAAWJ,QAAQ,CAACM,KAApB,EAA2BD,KAA3B;AACD;;AAEDE,EAAAA,UAAU,CAACH,GAAD,EAA4B;AACpC,SAAKI,QAAL,GAAgBC,GAAhB,CAAqBC,KAAD,IAAW;AAC7B,UAAIA,KAAK,YAAYT,aAArB,EAAoC;AAClCS,QAAAA,KAAK,CAACC,MAAN,CAAaP,GAAb;AACD;AACF,KAJD;AAKD;;AAXH","sourcesContent":["import type { DrawingContext, GroupProps } from \"../types\";\nimport { NodeType } from \"../types\";\nimport type { RenderNode } from \"../types/Node\";\n\nimport { JsiRenderNode } from \"./RenderNode\";\nimport type { NodeContext } from \"./Node\";\n\nexport class GroupNode\n  extends JsiRenderNode<GroupProps>\n  implements RenderNode<GroupProps>\n{\n  constructor(ctx: NodeContext, props: GroupProps) {\n    super(ctx, NodeType.Group, props);\n  }\n\n  renderNode(ctx: DrawingContext): void {\n    this.children().map((child) => {\n      if (child instanceof JsiRenderNode) {\n        child.render(ctx);\n      }\n    });\n  }\n}\n"]}