{"version":3,"sources":["ImageFilters.ts"],"names":["BlendMode","ColorChannel","processUniforms","TileMode","DeclarationType","NodeType","processRadius","enumKey","processColor","JsiDeclarationNode","Black","Float32Array","of","MakeInnerShadow","Skia","shadowOnly","dx","dy","sigmaX","sigmaY","color","input","sourceGraphic","ImageFilter","MakeColorFilter","ColorFilter","MakeBlend","Dst","sourceAlpha","SrcIn","f1","SrcOut","f2","MakeOffset","f3","MakeBlur","Decal","f4","MakeCompose","SrcOver","ImageFilterDeclaration","constructor","ctx","type","props","getOptionalChildInstance","index","child","_children","getMandatoryChildInstance","isImageFilter","materialize","isShader","MakeShader","declarationType","Error","OffsetImageFilterNode","OffsetImageFilter","x","y","DisplacementMapImageFilterNode","DisplacementMapImageFilter","channelX","channelY","scale","MakeDisplacementMap","BlurImageFilterNode","BlurImageFilter","mode","blur","sigma","DropShadowImageFilterNode","cl","inner","factory","bind","MakeDropShadowOnly","MakeDropShadow","MorphologyOperator","MorphologyImageFilterNode","MorphologyImageFilter","operator","r","radius","Erode","MakeErode","MakeDilate","BlendImageFilterNode","BlendImageFilter","a","b","RuntimeShaderImageFilterNode","RuntimeShaderImageFilter","source","uniforms","rtb","RuntimeShaderBuilder","MakeRuntimeShader"],"mappings":"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","sourcesContent":["import type { SkImageFilter, SkColor, Skia } from \"../../../skia/types\";\nimport {\n  BlendMode,\n  ColorChannel,\n  processUniforms,\n  TileMode,\n} from \"../../../skia/types\";\nimport type {\n  BlendImageFilterProps,\n  BlurImageFilterProps,\n  DisplacementMapImageFilterProps,\n  DropShadowImageFilterProps,\n  MorphologyImageFilterProps,\n  OffsetImageFilterProps,\n  RuntimeShaderImageFilterProps,\n} from \"../../types\";\nimport { DeclarationType, NodeType } from \"../../types\";\nimport { processRadius, enumKey, processColor } from \"../datatypes\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\n\nconst Black = Float32Array.of(0, 0, 0, 1);\n\nconst MakeInnerShadow = (\n  Skia: Skia,\n  shadowOnly: boolean | undefined,\n  dx: number,\n  dy: number,\n  sigmaX: number,\n  sigmaY: number,\n  color: SkColor,\n  input: SkImageFilter | null\n) => {\n  const sourceGraphic = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.Dst),\n    null\n  );\n  const sourceAlpha = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.SrcIn),\n    null\n  );\n  const f1 = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(color, BlendMode.SrcOut),\n    null\n  );\n  const f2 = Skia.ImageFilter.MakeOffset(dx, dy, f1);\n  const f3 = Skia.ImageFilter.MakeBlur(sigmaX, sigmaY, TileMode.Decal, f2);\n  const f4 = Skia.ImageFilter.MakeBlend(BlendMode.SrcIn, sourceAlpha, f3);\n  if (shadowOnly) {\n    return f4;\n  }\n  return Skia.ImageFilter.MakeCompose(\n    input,\n    Skia.ImageFilter.MakeBlend(BlendMode.SrcOver, sourceGraphic, f4)\n  );\n};\n\nexport abstract class ImageFilterDeclaration<\n  P,\n  Nullable extends null | never = never\n> extends JsiDeclarationNode<P, SkImageFilter, Nullable> {\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, DeclarationType.ImageFilter, type, props);\n  }\n\n  getOptionalChildInstance(index: number) {\n    const child = this._children[index];\n    if (!child) {\n      return null;\n    }\n    return this.getMandatoryChildInstance(index);\n  }\n\n  getMandatoryChildInstance(index: number) {\n    const child = this._children[index];\n    if (child instanceof JsiDeclarationNode) {\n      if (child.isImageFilter()) {\n        return child.materialize();\n      } else if (child.isShader()) {\n        return this.Skia.ImageFilter.MakeShader(child.materialize(), null);\n      } else if (child.declarationType === DeclarationType.ColorFilter) {\n        return this.Skia.ImageFilter.MakeColorFilter(child.materialize(), null);\n      } else {\n        throw new Error(`Found invalid child ${child.type} in ${this.type}`);\n      }\n    } else {\n      throw new Error(`Found invalid child ${child.type} in ${this.type}`);\n    }\n  }\n}\n\nexport class OffsetImageFilterNode extends ImageFilterDeclaration<OffsetImageFilterProps> {\n  constructor(ctx: NodeContext, props: OffsetImageFilterProps) {\n    super(ctx, NodeType.OffsetImageFilter, props);\n  }\n\n  materialize() {\n    const { x, y } = this.props;\n    return this.Skia.ImageFilter.MakeOffset(\n      x,\n      y,\n      this.getOptionalChildInstance(0)\n    );\n  }\n}\n\nexport class DisplacementMapImageFilterNode extends ImageFilterDeclaration<DisplacementMapImageFilterProps> {\n  constructor(ctx: NodeContext, props: DisplacementMapImageFilterProps) {\n    super(ctx, NodeType.DisplacementMapImageFilter, props);\n  }\n\n  materialize() {\n    const { channelX, channelY, scale } = this.props;\n    return this.Skia.ImageFilter.MakeDisplacementMap(\n      ColorChannel[enumKey(channelX)],\n      ColorChannel[enumKey(channelY)],\n      scale,\n      this.getMandatoryChildInstance(0),\n      this.getOptionalChildInstance(1)\n    );\n  }\n}\n\nexport class BlurImageFilterNode extends ImageFilterDeclaration<BlurImageFilterProps> {\n  constructor(ctx: NodeContext, props: BlurImageFilterProps) {\n    super(ctx, NodeType.BlurImageFilter, props);\n  }\n\n  materialize() {\n    const { mode, blur } = this.props;\n    const sigma = processRadius(this.Skia, blur);\n    return this.Skia.ImageFilter.MakeBlur(\n      sigma.x,\n      sigma.y,\n      TileMode[enumKey(mode)],\n      this.getOptionalChildInstance(0)\n    );\n  }\n}\n\nexport class DropShadowImageFilterNode extends ImageFilterDeclaration<DropShadowImageFilterProps> {\n  constructor(ctx: NodeContext, props: DropShadowImageFilterProps) {\n    super(ctx, NodeType.BlurImageFilter, props);\n  }\n\n  materialize() {\n    const { dx, dy, blur, shadowOnly, color: cl, inner } = this.props;\n    const color = processColor(this.Skia, cl, 1);\n    const input = this.getOptionalChildInstance(0);\n    let factory;\n    if (inner) {\n      factory = MakeInnerShadow.bind(null, this.Skia, shadowOnly);\n    } else {\n      factory = shadowOnly\n        ? this.Skia.ImageFilter.MakeDropShadowOnly.bind(this.Skia.ImageFilter)\n        : this.Skia.ImageFilter.MakeDropShadow.bind(this.Skia.ImageFilter);\n    }\n    return factory(dx, dy, blur, blur, color, input);\n  }\n}\n\nexport enum MorphologyOperator {\n  Erode,\n  Dilate,\n}\n\nexport class MorphologyImageFilterNode extends ImageFilterDeclaration<MorphologyImageFilterProps> {\n  constructor(ctx: NodeContext, props: MorphologyImageFilterProps) {\n    super(ctx, NodeType.MorphologyImageFilter, props);\n  }\n\n  materialize() {\n    const { operator } = this.props;\n    const r = processRadius(this.Skia, this.props.radius);\n    const input = this.getOptionalChildInstance(0);\n    if (MorphologyOperator[enumKey(operator)] === MorphologyOperator.Erode) {\n      return this.Skia.ImageFilter.MakeErode(r.x, r.y, input);\n    }\n    return this.Skia.ImageFilter.MakeDilate(r.x, r.y, input);\n  }\n}\n\nexport class BlendImageFilterNode extends ImageFilterDeclaration<BlendImageFilterProps> {\n  constructor(ctx: NodeContext, props: BlendImageFilterProps) {\n    super(ctx, NodeType.BlendImageFilter, props);\n  }\n\n  materialize() {\n    const { mode } = this.props;\n    const a = this.getMandatoryChildInstance(0);\n    const b = this.getMandatoryChildInstance(1);\n    return this.Skia.ImageFilter.MakeBlend(mode, a, b);\n  }\n}\n\nexport class RuntimeShaderImageFilterNode extends ImageFilterDeclaration<RuntimeShaderImageFilterProps> {\n  constructor(ctx: NodeContext, props: RuntimeShaderImageFilterProps) {\n    super(ctx, NodeType.RuntimeShaderImageFilter, props);\n  }\n\n  materialize() {\n    const { source, uniforms } = this.props;\n    const rtb = this.Skia.RuntimeShaderBuilder(source);\n    if (uniforms) {\n      processUniforms(source, uniforms, rtb);\n    }\n    const input = this.getOptionalChildInstance(0);\n    return this.Skia.ImageFilter.MakeRuntimeShader(rtb, null, input);\n  }\n}\n"]}