{"version":3,"sources":["ColorFilters.ts"],"names":["BlendMode","JsiDeclarationNode","DeclarationType","NodeType","processColor","enumKey","ColorFilterDeclaration","constructor","ctx","type","props","ColorFilter","addChild","child","Error","insertChildBefore","before","compose","filter","children","_children","length","Skia","MakeCompose","reduce","acc","materialize","MatrixColorFilterNode","MatrixColorFilter","matrix","cf","MakeMatrix","BlendColorFilterNode","BlendColorFilter","mode","color","MakeBlend","LinearToSRGBGammaColorFilterNode","LinearToSRGBGammaColorFilter","MakeLinearToSRGBGamma","SRGBToLinearGammaColorFilterNode","SRGBToLinearGammaColorFilter","MakeSRGBToLinearGamma","LumaColorFilterNode","LumaColorFilter","MakeLumaColorFilter","LerpColorFilterNode","LerpColorFilter","t","first","second","MakeLerp"],"mappings":"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","sourcesContent":["import { BlendMode } from \"../../../skia/types\";\nimport type { SkColorFilter } from \"../../../skia/types\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\nimport type {\n  BlendColorFilterProps,\n  MatrixColorFilterProps,\n  Node,\n} from \"../../types\";\nimport { DeclarationType, NodeType } from \"../../types\";\nimport { processColor } from \"../datatypes\";\nimport { enumKey } from \"../datatypes/Enum\";\nimport type { LerpColorFilterProps } from \"../../types/ColorFilters\";\n\nexport abstract class ColorFilterDeclaration<\n  P,\n  Nullable extends null | never = never\n> extends JsiDeclarationNode<P, SkColorFilter, Nullable> {\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, DeclarationType.ColorFilter, type, props);\n  }\n\n  addChild(child: Node<unknown>) {\n    if (!(child instanceof ColorFilterDeclaration)) {\n      throw new Error(`Cannot add child of type ${child.type} to ${this.type}`);\n    }\n    super.addChild(child);\n  }\n\n  insertChildBefore(child: Node<unknown>, before: Node<unknown>): void {\n    if (!(child instanceof ColorFilterDeclaration)) {\n      throw new Error(`Cannot add child of type ${child.type} to ${this.type}`);\n    }\n    super.insertChildBefore(child, before);\n  }\n\n  compose(filter: SkColorFilter) {\n    const children = this._children as ColorFilterDeclaration<unknown>[];\n    if (this._children.length === 0) {\n      return filter;\n    } else {\n      return this.Skia.ColorFilter.MakeCompose(\n        filter,\n        children.reduce<SkColorFilter | null>((acc, child) => {\n          if (acc === null) {\n            return child.materialize();\n          }\n          return this.Skia.ColorFilter.MakeCompose(acc, child.materialize());\n        }, null) as SkColorFilter\n      );\n    }\n  }\n}\n\nexport class MatrixColorFilterNode extends ColorFilterDeclaration<MatrixColorFilterProps> {\n  constructor(ctx: NodeContext, props: MatrixColorFilterProps) {\n    super(ctx, NodeType.MatrixColorFilter, props);\n  }\n\n  materialize() {\n    const { matrix } = this.props;\n    const cf = this.Skia.ColorFilter.MakeMatrix(matrix);\n    return this.compose(cf);\n  }\n}\n\nexport class BlendColorFilterNode extends ColorFilterDeclaration<BlendColorFilterProps> {\n  constructor(ctx: NodeContext, props: BlendColorFilterProps) {\n    super(ctx, NodeType.BlendColorFilter, props);\n  }\n\n  materialize() {\n    const { mode } = this.props;\n    const color = processColor(this.Skia, this.props.color, 1);\n    const cf = this.Skia.ColorFilter.MakeBlend(color, BlendMode[enumKey(mode)]);\n    return this.compose(cf);\n  }\n}\n\nexport class LinearToSRGBGammaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.LinearToSRGBGammaColorFilter, null);\n  }\n\n  materialize() {\n    const cf = this.Skia.ColorFilter.MakeLinearToSRGBGamma();\n    return this.compose(cf);\n  }\n}\n\nexport class SRGBToLinearGammaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.SRGBToLinearGammaColorFilter, null);\n  }\n\n  materialize() {\n    const cf = this.Skia.ColorFilter.MakeSRGBToLinearGamma();\n    return this.compose(cf);\n  }\n}\n\nexport class LumaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.LumaColorFilter, null);\n  }\n\n  materialize() {\n    const cf = this.Skia.ColorFilter.MakeLumaColorFilter();\n    return this.compose(cf);\n  }\n}\n\nexport class LerpColorFilterNode extends ColorFilterDeclaration<LerpColorFilterProps> {\n  constructor(ctx: NodeContext, props: LerpColorFilterProps) {\n    super(ctx, NodeType.LerpColorFilter, props);\n  }\n\n  materialize() {\n    const { t } = this.props;\n    const [first, second] = this.children() as JsiDeclarationNode<\n      unknown,\n      SkColorFilter\n    >[];\n    return this.Skia.ColorFilter.MakeLerp(\n      t,\n      first.materialize(),\n      second.materialize()\n    );\n  }\n}\n"]}