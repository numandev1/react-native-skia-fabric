{"version":3,"sources":["Box.ts"],"names":["BlurStyle","ClipOp","isRRect","DeclarationType","NodeType","JsiDeclarationNode","processColor","JsiRenderNode","inflate","Skia","box","dx","dy","tx","ty","RRectXY","XYWHRect","rect","x","y","width","height","rx","ry","deflate","BoxShadowNode","constructor","ctx","props","Unknown","Box","materialize","BoxNode","renderNode","canvas","paint","opacity","defaultBox","shadows","_children","map","node","filter","n","shadow","inner","color","blur","spread","lPaint","Paint","setColor","setMaskFilter","MaskFilter","MakeBlur","Normal","drawRRect","delta","Point","Math","abs","save","clipRRect","Intersect","outer","drawDRRect","restore"],"mappings":"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","sourcesContent":["import type { SkRRect, Skia } from \"../../../skia/types\";\nimport { BlurStyle, ClipOp, isRRect } from \"../../../skia/types\";\nimport type { DrawingContext } from \"../../types\";\nimport { DeclarationType, NodeType } from \"../../types\";\nimport type { BoxShadowProps, BoxProps } from \"../../types/Drawings\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\nimport { processColor } from \"../datatypes\";\nimport { JsiRenderNode } from \"../RenderNode\";\n\nconst inflate = (\n  Skia: Skia,\n  box: SkRRect,\n  dx: number,\n  dy: number,\n  tx = 0,\n  ty = 0\n) =>\n  Skia.RRectXY(\n    Skia.XYWHRect(\n      box.rect.x - dx + tx,\n      box.rect.y - dy + ty,\n      box.rect.width + 2 * dx,\n      box.rect.height + 2 * dy\n    ),\n    box.rx + dx,\n    box.ry + dy\n  );\n\nconst deflate = (\n  Skia: Skia,\n  box: SkRRect,\n  dx: number,\n  dy: number,\n  tx = 0,\n  ty = 0\n) => inflate(Skia, box, -dx, -dy, tx, ty);\n\nexport class BoxShadowNode extends JsiDeclarationNode<\n  BoxShadowProps,\n  BoxShadowProps\n> {\n  constructor(ctx: NodeContext, props: BoxShadowProps) {\n    super(ctx, DeclarationType.Unknown, NodeType.Box, props);\n  }\n\n  materialize() {\n    return this.props;\n  }\n}\n\nexport class BoxNode extends JsiRenderNode<BoxProps> {\n  constructor(ctx: NodeContext, props: BoxProps) {\n    super(ctx, NodeType.Box, props);\n  }\n\n  renderNode({ canvas, paint, opacity }: DrawingContext) {\n    const { box: defaultBox } = this.props;\n    const box = isRRect(defaultBox)\n      ? defaultBox\n      : this.Skia.RRectXY(defaultBox, 0, 0);\n    const shadows = this._children\n      .map((node) => {\n        if (node instanceof BoxShadowNode) {\n          return node.materialize();\n        }\n        return null;\n      })\n      .filter((n): n is BoxShadowProps => n !== null);\n    shadows\n      .filter((shadow) => !shadow.inner)\n      .map((shadow) => {\n        const { color = \"black\", blur, spread = 0, dx = 0, dy = 0 } = shadow;\n        const lPaint = this.Skia.Paint();\n        lPaint.setColor(processColor(this.Skia, color, opacity));\n        lPaint.setMaskFilter(\n          this.Skia.MaskFilter.MakeBlur(BlurStyle.Normal, blur, true)\n        );\n        canvas.drawRRect(\n          inflate(this.Skia, box, spread, spread, dx, dy),\n          lPaint\n        );\n      });\n\n    canvas.drawRRect(box, paint);\n\n    shadows\n      .filter((shadow) => shadow.inner)\n      .map((shadow) => {\n        const { color = \"black\", blur, spread = 0, dx = 0, dy = 0 } = shadow;\n        const delta = this.Skia.Point(10 + Math.abs(dx), 10 + Math.abs(dy));\n        canvas.save();\n        canvas.clipRRect(box, ClipOp.Intersect, false);\n        const lPaint = this.Skia.Paint();\n        lPaint.setColor(processColor(this.Skia, color, opacity));\n        lPaint.setMaskFilter(\n          this.Skia.MaskFilter.MakeBlur(BlurStyle.Normal, blur, true)\n        );\n        const inner = deflate(this.Skia, box, spread, spread, dx, dy);\n        const outer = inflate(this.Skia, box, delta.x, delta.y);\n        canvas.drawDRRect(outer, inner, lPaint);\n        canvas.restore();\n      });\n  }\n}\n"]}