{"version":3,"sources":["RenderNode.ts"],"names":["StrokeCap","StrokeJoin","PaintStyle","BlendMode","ClipOp","isRRect","isPathDef","processPath","processTransformProps","JsiNode","JsiDeclarationNode","enumKey","paintProps","JsiRenderNode","constructor","ctx","type","props","matrix","Skia","Matrix","onPropChange","setProps","paintCache","setProp","key","value","hasChanged","includes","identity","clipPath","undefined","clipRect","clipRRect","computeMatrix","computeClip","addChild","child","setInvalidate","insertChildBefore","before","clip","getPaintCtx","color","strokeWidth","blendMode","style","strokeJoin","strokeCap","strokeMiter","opacity","antiAlias","Color","_children","forEach","isColorFilter","cf","materialize","colorFilter","ColorFilter","MakeCompose","isShader","shader","isPathEffect","pe","pathEffect","PathEffect","isImageFilter","filter","imageFilter","ImageFilter","isMaskFilter","maskFilter","render","parentCtx","invertClip","layer","transform","canvas","parent","paint","paintCtx","concatPaint","hasTransform","hasClip","shouldSave","op","Difference","Intersect","saveLayer","isSkPaint","current","save","concat","renderNode","restore","obj","__typename__","alpha","copy","setShader","setColor","cl","getColor","setStrokeWidth","setAntiAlias","setBlendMode","setColorFilter","setImageFilter","setMaskFilter","setPathEffect","setAlphaf","setStrokeCap","setStrokeJoin","setStrokeMiter","setStyle"],"mappings":"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","sourcesContent":["import type { RefObject } from \"react\";\n\nimport type {\n  SkMatrix,\n  SkRect,\n  SkRRect,\n  SkPath,\n  SkPaint,\n} from \"../../skia/types\";\nimport {\n  StrokeCap,\n  StrokeJoin,\n  PaintStyle,\n  BlendMode,\n  ClipOp,\n  isRRect,\n} from \"../../skia/types\";\nimport type {\n  RenderNode,\n  GroupProps,\n  DrawingContext,\n  NodeType,\n  Node,\n  DeclarationNode,\n} from \"../types\";\n\nimport { isPathDef, processPath, processTransformProps } from \"./datatypes\";\nimport type { NodeContext } from \"./Node\";\nimport { JsiNode, JsiDeclarationNode } from \"./Node\";\nimport type { PaintContext } from \"./PaintContext\";\nimport { enumKey } from \"./datatypes/Enum\";\n\nconst paintProps = [\n  \"color\",\n  \"strokeWidth\",\n  \"blendMode\",\n  \"strokeCap\",\n  \"strokeJoin\",\n  \"strokeMiter\",\n  \"style\",\n  \"antiAlias\",\n  \"opacity\",\n];\n\ninterface PaintCache {\n  parent: SkPaint;\n  child: SkPaint;\n}\n\nexport abstract class JsiRenderNode<P extends GroupProps>\n  extends JsiNode<P>\n  implements RenderNode<P>\n{\n  paintCache: PaintCache | null = null;\n  matrix: SkMatrix;\n  clipRect?: SkRect;\n  clipRRect?: SkRRect;\n  clipPath?: SkPath;\n\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, type, props);\n    this.matrix = this.Skia.Matrix();\n    this.onPropChange();\n  }\n\n  setProps(props: P) {\n    super.setProps(props);\n    this.onPropChange();\n    this.paintCache = null;\n  }\n\n  setProp<K extends keyof P>(key: K, value: P[K]) {\n    const hasChanged = super.setProp(key, value);\n    if (hasChanged) {\n      this.onPropChange();\n      if (paintProps.includes(key as string)) {\n        this.paintCache = null;\n      }\n    }\n    return hasChanged;\n  }\n\n  protected onPropChange() {\n    this.matrix.identity();\n    this.clipPath = undefined;\n    this.clipRect = undefined;\n    this.clipRRect = undefined;\n    this.computeMatrix();\n    this.computeClip();\n  }\n\n  addChild(child: Node<unknown>) {\n    if (child instanceof JsiDeclarationNode) {\n      child.setInvalidate(() => (this.paintCache = null));\n    }\n    super.addChild(child);\n  }\n\n  insertChildBefore(child: Node<unknown>, before: Node<unknown>) {\n    if (child instanceof JsiDeclarationNode) {\n      child.setInvalidate(() => (this.paintCache = null));\n    }\n    super.insertChildBefore(child, before);\n  }\n\n  private computeClip() {\n    const { clip } = this.props;\n    if (clip) {\n      if (isPathDef(clip)) {\n        this.clipPath = processPath(this.Skia, clip);\n      } else if (isRRect(clip)) {\n        this.clipRRect = clip;\n      } else {\n        this.clipRect = clip;\n      }\n    }\n  }\n\n  private computeMatrix() {\n    processTransformProps(this.matrix, this.props);\n  }\n\n  private getPaintCtx() {\n    let ctx: PaintContext | undefined;\n    const {\n      color,\n      strokeWidth,\n      blendMode,\n      style,\n      strokeJoin,\n      strokeCap,\n      strokeMiter,\n      opacity,\n      antiAlias,\n    } = this.props;\n    if (\n      color !== undefined ||\n      strokeWidth !== undefined ||\n      blendMode !== undefined ||\n      style !== undefined ||\n      strokeJoin !== undefined ||\n      strokeCap !== undefined ||\n      strokeMiter !== undefined ||\n      opacity !== undefined ||\n      antiAlias !== undefined\n    ) {\n      ctx = {};\n      if (color !== undefined) {\n        ctx.color = this.Skia.Color(color);\n      }\n      if (strokeWidth !== undefined) {\n        ctx.strokeWidth = strokeWidth;\n      }\n      if (blendMode !== undefined) {\n        ctx.blendMode = BlendMode[enumKey(blendMode)];\n      }\n      if (style !== undefined) {\n        ctx.style = PaintStyle[enumKey(style)];\n      }\n      if (strokeJoin !== undefined) {\n        ctx.strokeJoin = StrokeJoin[enumKey(strokeJoin)];\n      }\n      if (strokeCap !== undefined) {\n        ctx.strokeCap = StrokeCap[enumKey(strokeCap)];\n      }\n      if (strokeMiter !== undefined) {\n        ctx.strokeMiter = strokeMiter;\n      }\n      if (opacity !== undefined) {\n        ctx.opacity = opacity;\n      }\n      if (antiAlias !== undefined) {\n        ctx.antiAlias = antiAlias;\n      }\n    }\n    this._children.forEach((child) => {\n      if (child instanceof JsiDeclarationNode) {\n        if (child.isColorFilter()) {\n          ctx = ctx || {};\n          const cf = child.materialize();\n          ctx.colorFilter = ctx.colorFilter\n            ? this.Skia.ColorFilter.MakeCompose(cf, ctx.colorFilter)\n            : cf;\n        } else if (child.isShader()) {\n          ctx = ctx || {};\n          const shader = child.materialize();\n          ctx.shader = shader;\n        } else if (child.isPathEffect()) {\n          ctx = ctx || {};\n          const pe = child.materialize();\n          ctx.pathEffect = ctx.pathEffect\n            ? this.Skia.PathEffect.MakeCompose(pe, ctx.pathEffect)\n            : pe;\n        } else if (child.isImageFilter()) {\n          ctx = ctx || {};\n          const filter = child.materialize();\n          ctx.imageFilter = ctx.imageFilter\n            ? this.Skia.ImageFilter.MakeCompose(filter, ctx.imageFilter)\n            : filter;\n        } else if (child.isMaskFilter()) {\n          ctx = ctx || {};\n          const filter = child.materialize();\n          ctx.maskFilter = filter;\n        }\n      }\n    });\n    return ctx;\n  }\n\n  render(parentCtx: DrawingContext) {\n    const { invertClip, layer, matrix, transform } = this.props;\n    const { canvas } = parentCtx;\n\n    const opacity = this.props.opacity\n      ? parentCtx.opacity * this.props.opacity\n      : parentCtx.opacity;\n\n    if (\n      this.paintCache === null ||\n      this.paintCache.parent !== parentCtx.paint\n    ) {\n      const paintCtx = this.getPaintCtx();\n      const child = paintCtx\n        ? concatPaint(parentCtx.paint, paintCtx, parentCtx.opacity)\n        : parentCtx.paint;\n      this.paintCache = { parent: parentCtx.paint, child };\n    }\n    const paint = this.paintCache.child;\n    // TODO: can we only recreate a new context here if needed?\n    const ctx = { ...parentCtx, opacity, paint };\n    const hasTransform = matrix !== undefined || transform !== undefined;\n    const hasClip = this.clipRect !== undefined;\n    const shouldSave = hasTransform || hasClip || !!layer;\n    const op = invertClip ? ClipOp.Difference : ClipOp.Intersect;\n\n    if (shouldSave) {\n      if (layer) {\n        if (typeof layer === \"boolean\") {\n          canvas.saveLayer();\n        } else if (isSkPaint(layer)) {\n          canvas.saveLayer(layer);\n        } else {\n          canvas.saveLayer(\n            layer.current ? layer.current.materialize() : undefined\n          );\n        }\n      } else {\n        canvas.save();\n      }\n    }\n\n    if (this.matrix) {\n      canvas.concat(this.matrix);\n    }\n    if (this.clipRect) {\n      canvas.clipRect(this.clipRect, op, true);\n    }\n    if (this.clipRRect) {\n      canvas.clipRRect(this.clipRRect, op, true);\n    }\n    if (this.clipPath) {\n      canvas.clipPath(this.clipPath, op, true);\n    }\n\n    this.renderNode(ctx);\n\n    if (shouldSave) {\n      canvas.restore();\n    }\n  }\n\n  abstract renderNode(ctx: DrawingContext): void;\n}\n\nexport const isSkPaint = (\n  obj: RefObject<DeclarationNode<unknown, SkPaint>> | SkPaint\n): obj is SkPaint => \"__typename__\" in obj && obj.__typename__ === \"Paint\";\n\nconst concatPaint = (\n  parent: SkPaint,\n  {\n    color,\n    strokeWidth,\n    shader,\n    antiAlias,\n    blendMode,\n    colorFilter,\n    imageFilter,\n    maskFilter,\n    pathEffect,\n    opacity: alpha,\n    strokeCap,\n    strokeJoin,\n    strokeMiter,\n    style,\n  }: PaintContext,\n  opacity: number\n) => {\n  const paint = parent.copy();\n  if (color !== undefined) {\n    paint.setShader(null);\n    color[3] *= opacity;\n    paint.setColor(color);\n  } else {\n    const cl = paint.getColor();\n    cl[3] *= opacity;\n    paint.setColor(cl);\n  }\n  if (strokeWidth !== undefined) {\n    paint.setStrokeWidth(strokeWidth);\n  }\n  if (shader !== undefined) {\n    paint.setShader(shader);\n  }\n  if (antiAlias !== undefined) {\n    paint.setAntiAlias(antiAlias);\n  }\n  if (blendMode !== undefined) {\n    paint.setBlendMode(blendMode);\n  }\n  if (colorFilter !== undefined) {\n    paint.setColorFilter(colorFilter);\n  }\n  if (imageFilter !== undefined) {\n    paint.setImageFilter(imageFilter);\n  }\n  if (maskFilter !== undefined) {\n    paint.setMaskFilter(maskFilter);\n  }\n  if (pathEffect !== undefined) {\n    paint.setPathEffect(pathEffect);\n  }\n  if (alpha !== undefined) {\n    paint.setAlphaf(alpha * opacity);\n  }\n  if (strokeCap !== undefined) {\n    paint.setStrokeCap(strokeCap);\n  }\n  if (strokeJoin !== undefined) {\n    paint.setStrokeJoin(strokeJoin);\n  }\n  if (strokeMiter !== undefined) {\n    paint.setStrokeMiter(strokeMiter);\n  }\n  if (style !== undefined) {\n    paint.setStyle(style);\n  }\n  return paint;\n};\n"]}