{"version":3,"sources":["JsiSkCanvas.ts"],"names":["ckEnum","HostObject","JsiSkPaint","JsiSkRect","JsiSkRRect","JsiSkImage","JsiSkVertices","JsiSkPath","JsiSkFont","JsiSkTextBlob","JsiSkPicture","JsiSkMatrix","JsiSkImageFilter","JsiSkPoint","JsiSkCanvas","constructor","CanvasKit","ref","drawRect","rect","paint","fromValue","drawImage","image","x","y","drawImageRect","img","src","dest","fastSample","drawImageCubic","left","top","B","C","drawImageOptions","fm","mm","drawImageNine","center","filter","Array","from","drawImageRectCubic","drawImageRectOptions","drawPaint","drawLine","x0","y0","x1","y1","drawCircle","cx","cy","radius","drawVertices","verts","mode","drawPatch","cubics","colors","texs","map","flat","flatMap","p","undefined","restoreToCount","saveCount","drawPoints","points","drawArc","oval","startAngle","sweepAngle","useCenter","drawRRect","rrect","drawDRRect","outer","inner","drawOval","drawPath","path","drawText","str","font","drawTextBlob","blob","drawGlyphs","glyphs","positions","drawSvg","_svgDom","_width","_height","Error","save","saveLayer","bounds","backdrop","flags","restore","rotate","rotationInDegrees","rx","ry","scale","sx","sy","skew","translate","dx","dy","drawColor","color","blendMode","clear","clipPath","op","doAntiAlias","clipRect","clipRRect","concat","m","drawPicture","skp"],"mappings":"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","sourcesContent":["import type { Canvas, CanvasKit } from \"canvaskit-wasm\";\n\nimport type {\n  BlendMode,\n  ClipOp,\n  FilterMode,\n  MipmapMode,\n  PointMode,\n  SaveLayerFlag,\n  SkCanvas,\n  SkColor,\n  SkFont,\n  SkImage,\n  SkImageFilter,\n  SkMatrix,\n  SkPaint,\n  SkPath,\n  SkPicture,\n  SkPoint,\n  SkRect,\n  SkRRect,\n  SkSVG,\n  SkTextBlob,\n  SkVertices,\n} from \"../types\";\n\nimport { ckEnum, HostObject } from \"./Host\";\nimport { JsiSkPaint } from \"./JsiSkPaint\";\nimport { JsiSkRect } from \"./JsiSkRect\";\nimport { JsiSkRRect } from \"./JsiSkRRect\";\nimport { JsiSkImage } from \"./JsiSkImage\";\nimport { JsiSkVertices } from \"./JsiSkVertices\";\nimport { JsiSkPath } from \"./JsiSkPath\";\nimport { JsiSkFont } from \"./JsiSkFont\";\nimport { JsiSkTextBlob } from \"./JsiSkTextBlob\";\nimport { JsiSkPicture } from \"./JsiSkPicture\";\nimport { JsiSkMatrix } from \"./JsiSkMatrix\";\nimport { JsiSkImageFilter } from \"./JsiSkImageFilter\";\nimport { JsiSkPoint } from \"./JsiSkPoint\";\n\nexport class JsiSkCanvas\n  extends HostObject<Canvas, \"Canvas\">\n  implements SkCanvas\n{\n  constructor(CanvasKit: CanvasKit, ref: Canvas) {\n    super(CanvasKit, ref, \"Canvas\");\n  }\n\n  drawRect(rect: SkRect, paint: SkPaint) {\n    this.ref.drawRect(\n      JsiSkRect.fromValue(this.CanvasKit, rect),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawImage(image: SkImage, x: number, y: number, paint?: SkPaint) {\n    this.ref.drawImage(\n      JsiSkImage.fromValue(image),\n      x,\n      y,\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawImageRect(\n    img: SkImage,\n    src: SkRect,\n    dest: SkRect,\n    paint: SkPaint,\n    fastSample?: boolean\n  ) {\n    this.ref.drawImageRect(\n      JsiSkImage.fromValue(img),\n      JsiSkRect.fromValue(this.CanvasKit, src),\n      JsiSkRect.fromValue(this.CanvasKit, dest),\n      JsiSkPaint.fromValue(paint),\n      fastSample\n    );\n  }\n\n  drawImageCubic(\n    img: SkImage,\n    left: number,\n    top: number,\n    B: number,\n    C: number,\n    paint?: SkPaint | null\n  ) {\n    this.ref.drawImageCubic(\n      JsiSkImage.fromValue(img),\n      left,\n      top,\n      B,\n      C,\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawImageOptions(\n    img: SkImage,\n    left: number,\n    top: number,\n    fm: FilterMode,\n    mm: MipmapMode,\n    paint?: SkPaint | null\n  ) {\n    this.ref.drawImageOptions(\n      JsiSkImage.fromValue(img),\n      left,\n      top,\n      ckEnum(fm),\n      ckEnum(mm),\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawImageNine(\n    img: SkImage,\n    center: SkRect,\n    dest: SkRect,\n    filter: FilterMode,\n    paint?: SkPaint | null\n  ) {\n    this.ref.drawImageNine(\n      JsiSkImage.fromValue(img),\n      Array.from(JsiSkRect.fromValue(this.CanvasKit, center)),\n      JsiSkRect.fromValue(this.CanvasKit, dest),\n      ckEnum(filter),\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawImageRectCubic(\n    img: SkImage,\n    src: SkRect,\n    dest: SkRect,\n    B: number,\n    C: number,\n    paint?: SkPaint | null\n  ) {\n    this.ref.drawImageRectCubic(\n      JsiSkImage.fromValue(img),\n      JsiSkRect.fromValue(this.CanvasKit, src),\n      JsiSkRect.fromValue(this.CanvasKit, dest),\n      B,\n      C,\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawImageRectOptions(\n    img: SkImage,\n    src: SkRect,\n    dest: SkRect,\n    fm: FilterMode,\n    mm: MipmapMode,\n    paint?: SkPaint | null\n  ) {\n    this.ref.drawImageRectOptions(\n      JsiSkImage.fromValue(img),\n      JsiSkRect.fromValue(this.CanvasKit, src),\n      JsiSkRect.fromValue(this.CanvasKit, dest),\n      ckEnum(fm),\n      ckEnum(mm),\n      paint ? JsiSkPaint.fromValue(paint) : paint\n    );\n  }\n\n  drawPaint(paint: SkPaint) {\n    this.ref.drawPaint(JsiSkPaint.fromValue(paint));\n  }\n\n  drawLine(x0: number, y0: number, x1: number, y1: number, paint: SkPaint) {\n    this.ref.drawLine(x0, y0, x1, y1, JsiSkPaint.fromValue(paint));\n  }\n\n  drawCircle(cx: number, cy: number, radius: number, paint: SkPaint) {\n    this.ref.drawCircle(cx, cy, radius, JsiSkPaint.fromValue(paint));\n  }\n\n  drawVertices(verts: SkVertices, mode: BlendMode, paint: SkPaint) {\n    this.ref.drawVertices(\n      JsiSkVertices.fromValue(verts),\n      ckEnum(mode),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawPatch(\n    cubics: SkPoint[],\n    colors?: SkColor[] | null,\n    texs?: SkPoint[] | null,\n    mode?: BlendMode | null,\n    paint?: SkPaint\n  ) {\n    this.ref.drawPatch(\n      cubics.map(({ x, y }) => [x, y]).flat(),\n      colors,\n      texs ? texs.flatMap((p) => Array.from(JsiSkPoint.fromValue(p))) : texs,\n      mode ? ckEnum(mode) : null,\n      paint ? JsiSkPaint.fromValue(paint) : undefined\n    );\n  }\n\n  restoreToCount(saveCount: number) {\n    this.ref.restoreToCount(saveCount);\n  }\n\n  drawPoints(mode: PointMode, points: SkPoint[], paint: SkPaint) {\n    this.ref.drawPoints(\n      ckEnum(mode),\n      points.map(({ x, y }) => [x, y]).flat(),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawArc(\n    oval: SkRect,\n    startAngle: number,\n    sweepAngle: number,\n    useCenter: boolean,\n    paint: SkPaint\n  ) {\n    this.ref.drawArc(\n      JsiSkRect.fromValue(this.CanvasKit, oval),\n      startAngle,\n      sweepAngle,\n      useCenter,\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawRRect(rrect: SkRRect, paint: SkPaint) {\n    this.ref.drawRRect(\n      JsiSkRRect.fromValue(this.CanvasKit, rrect),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawDRRect(outer: SkRRect, inner: SkRRect, paint: SkPaint) {\n    this.ref.drawDRRect(\n      JsiSkRRect.fromValue(this.CanvasKit, outer),\n      JsiSkRRect.fromValue(this.CanvasKit, inner),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawOval(oval: SkRect, paint: SkPaint) {\n    this.ref.drawOval(\n      JsiSkRect.fromValue(this.CanvasKit, oval),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawPath(path: SkPath, paint: SkPaint) {\n    this.ref.drawPath(JsiSkPath.fromValue(path), JsiSkPaint.fromValue(paint));\n  }\n\n  drawText(str: string, x: number, y: number, paint: SkPaint, font: SkFont) {\n    this.ref.drawText(\n      str,\n      x,\n      y,\n      JsiSkPaint.fromValue(paint),\n      JsiSkFont.fromValue(font)\n    );\n  }\n\n  drawTextBlob(blob: SkTextBlob, x: number, y: number, paint: SkPaint) {\n    this.ref.drawTextBlob(\n      JsiSkTextBlob.fromValue(blob),\n      x,\n      y,\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawGlyphs(\n    glyphs: number[],\n    positions: SkPoint[],\n    x: number,\n    y: number,\n    font: SkFont,\n    paint: SkPaint\n  ) {\n    this.ref.drawGlyphs(\n      glyphs,\n      positions.map((p) => [p.x, p.y]).flat(),\n      x,\n      y,\n      JsiSkFont.fromValue(font),\n      JsiSkPaint.fromValue(paint)\n    );\n  }\n\n  drawSvg(_svgDom: SkSVG, _width?: number, _height?: number) {\n    throw new Error(\"drawSvg is not implemented on React Native Web\");\n  }\n\n  save() {\n    return this.ref.save();\n  }\n\n  saveLayer(\n    paint?: SkPaint,\n    bounds?: SkRect | null,\n    backdrop?: SkImageFilter | null,\n    flags?: SaveLayerFlag\n  ) {\n    return this.ref.saveLayer(\n      paint ? JsiSkPaint.fromValue(paint) : undefined,\n      bounds ? JsiSkRect.fromValue(this.CanvasKit, bounds) : bounds,\n      backdrop ? JsiSkImageFilter.fromValue(backdrop) : backdrop,\n      flags\n    );\n  }\n\n  restore() {\n    this.ref.restore();\n  }\n\n  rotate(rotationInDegrees: number, rx: number, ry: number) {\n    this.ref.rotate(rotationInDegrees, rx, ry);\n  }\n\n  scale(sx: number, sy: number) {\n    this.ref.scale(sx, sy);\n  }\n\n  skew(sx: number, sy: number) {\n    this.ref.skew(sx, sy);\n  }\n\n  translate(dx: number, dy: number) {\n    this.ref.translate(dx, dy);\n  }\n\n  drawColor(color: SkColor, blendMode?: BlendMode) {\n    this.ref.drawColor(color, blendMode ? ckEnum(blendMode) : undefined);\n  }\n\n  clear(color: SkColor) {\n    this.ref.clear(color);\n  }\n\n  clipPath(path: SkPath, op: ClipOp, doAntiAlias: boolean) {\n    this.ref.clipPath(JsiSkPath.fromValue(path), ckEnum(op), doAntiAlias);\n  }\n\n  clipRect(rect: SkRect, op: ClipOp, doAntiAlias: boolean) {\n    this.ref.clipRect(\n      JsiSkRect.fromValue(this.CanvasKit, rect),\n      ckEnum(op),\n      doAntiAlias\n    );\n  }\n\n  clipRRect(rrect: SkRRect, op: ClipOp, doAntiAlias: boolean) {\n    this.ref.clipRRect(\n      JsiSkRRect.fromValue(this.CanvasKit, rrect),\n      ckEnum(op),\n      doAntiAlias\n    );\n  }\n\n  concat(m: SkMatrix) {\n    this.ref.concat(JsiSkMatrix.fromValue(m));\n  }\n\n  drawPicture(skp: SkPicture) {\n    this.ref.drawPicture(JsiSkPicture.fromValue(skp));\n  }\n}\n"]}