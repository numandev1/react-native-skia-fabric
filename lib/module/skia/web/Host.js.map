{"version":3,"sources":["Host.ts"],"names":["NotImplementedOnRNWeb","Error","constructor","msg","Host","CanvasKit","BaseHostObject","ref","typename","__typename__","HostObject","fromValue","value","ckEnum","optEnum","undefined"],"mappings":";;AAIA,OAAO,MAAMA,qBAAN,SAAoCC,KAApC,CAA0C;AAC/CC,EAAAA,WAAW,CAACC,GAAD,EAAe;AACxB,UAAMA,GAAN,aAAMA,GAAN,cAAMA,GAAN,GAAa,qCAAb;AACD;;AAH8C;AAMjD,OAAO,MAAeC,IAAf,CAAoB;AAGzBF,EAAAA,WAAW,CAACG,SAAD,EAAuB;AAAA;;AAChC,SAAKA,SAAL,GAAiBA,SAAjB;AACD;;AALwB;AAQ3B,OAAO,MAAeC,cAAf,SACGF,IADH,CAGP;AAIEF,EAAAA,WAAW,CAACG,SAAD,EAAuBE,GAAvB,EAA+BC,QAA/B,EAA4C;AACrD,UAAMH,SAAN;;AADqD;;AAAA;;AAErD,SAAKE,GAAL,GAAWA,GAAX;AACA,SAAKE,YAAL,GAAoBD,QAApB;AACD;;AARH;AAWA,OAAO,MAAeE,UAAf,SAAuDJ,cAAvD,CAGL;AACgB,SAATK,SAAS,CAAIC,KAAJ,EAAkC;AAChD,WAAQA,KAAD,CAAiCL,GAAxC;AACD;;AAHD;AAMF,OAAO,MAAMM,MAAM,GAAID,KAAD,KAAsC;AAAEA,EAAAA;AAAF,CAAtC,CAAf;AACP,OAAO,MAAME,OAAO,GAClBF,KADqB,IAGrBA,KAAK,KAAKG,SAAV,GAAsBA,SAAtB,GAAkC;AAAEH,EAAAA;AAAF,CAH7B","sourcesContent":["import type { CanvasKit, EmbindEnumEntity } from \"canvaskit-wasm\";\n\nimport type { SkJSIInstance } from \"../types\";\n\nexport class NotImplementedOnRNWeb extends Error {\n  constructor(msg?: string) {\n    super(msg ?? \"Not implemented on React Native Web\");\n  }\n}\n\nexport abstract class Host {\n  readonly CanvasKit: CanvasKit;\n\n  constructor(CanvasKit: CanvasKit) {\n    this.CanvasKit = CanvasKit;\n  }\n}\n\nexport abstract class BaseHostObject<T, N extends string>\n  extends Host\n  implements SkJSIInstance<N>\n{\n  readonly __typename__: N;\n  ref: T;\n\n  constructor(CanvasKit: CanvasKit, ref: T, typename: N) {\n    super(CanvasKit);\n    this.ref = ref;\n    this.__typename__ = typename;\n  }\n}\n\nexport abstract class HostObject<T, N extends string> extends BaseHostObject<\n  T,\n  N\n> {\n  static fromValue<T>(value: SkJSIInstance<string>) {\n    return (value as HostObject<T, string>).ref;\n  }\n}\n\nexport const ckEnum = (value: number): EmbindEnumEntity => ({ value });\nexport const optEnum = (\n  value: number | undefined\n): EmbindEnumEntity | undefined =>\n  value === undefined ? undefined : { value };\n"]}