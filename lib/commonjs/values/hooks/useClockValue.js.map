{"version":3,"sources":["useClockValue.ts"],"names":["useClockValue","clock","ValueApi","createClockValue","start","stop"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEO,MAAMA,aAAa,GAAG,MAAM;AACjC,QAAMC,KAAK,GAAG,oBAAQ,MAAMC,cAASC,gBAAT,EAAd,EAA2C,EAA3C,CAAd;AACA,wBAAU,MAAM;AACdF,IAAAA,KAAK,CAACG,KAAN;AACA,WAAOH,KAAK,CAACI,IAAb;AACD,GAHD,EAGG,CAACJ,KAAD,CAHH;AAIA,SAAOA,KAAP;AACD,CAPM","sourcesContent":["import { useEffect, useMemo } from \"react\";\n\nimport { ValueApi } from \"../api\";\n\n/**\n * @returns A new value that will be updated on every frame redraw with the\n * number of milliseconds elapsed since the value was started.\n * The clock is created in the stopped state.\n */\n\nexport const useClockValue = () => {\n  const clock = useMemo(() => ValueApi.createClockValue(), []);\n  useEffect(() => {\n    clock.start();\n    return clock.stop;\n  }, [clock]);\n  return clock;\n};\n"]}