{"version":3,"sources":["JsiSkFont.ts"],"names":["JsiSkFont","HostObject","constructor","CanvasKit","ref","getTextWidth","text","paint","ids","getGlyphIDs","widths","getGlyphWidths","reduce","a","b","getMetrics","result","ascent","descent","leading","bounds","JsiSkRect","undefined","str","numCodePoints","glyphs","JsiSkPaint","fromValue","getGlyphIntercepts","positions","top","bottom","map","p","Array","from","JsiSkPoint","flat","getScaleX","getSize","getSkewX","isEmbolden","getTypeface","tf","JsiSkTypeface","setEdging","edging","setEmbeddedBitmaps","embeddedBitmaps","setHinting","hinting","setLinearMetrics","linearMetrics","setScaleX","sx","setSize","points","setSkewX","setEmbolden","embolden","setSubpixel","subpixel","setTypeface","face"],"mappings":"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","sourcesContent":["import type { CanvasKit, Font } from \"canvaskit-wasm\";\n\nimport type {\n  FontEdging,\n  FontHinting,\n  SkFont,\n  SkPaint,\n  SkPoint,\n  SkTypeface,\n} from \"../types\";\n\nimport { HostObject, ckEnum } from \"./Host\";\nimport { JsiSkPaint } from \"./JsiSkPaint\";\nimport { JsiSkPoint } from \"./JsiSkPoint\";\nimport { JsiSkRect } from \"./JsiSkRect\";\nimport { JsiSkTypeface } from \"./JsiSkTypeface\";\n\nexport class JsiSkFont extends HostObject<Font, \"Font\"> implements SkFont {\n  constructor(CanvasKit: CanvasKit, ref: Font) {\n    super(CanvasKit, ref, \"Font\");\n  }\n\n  getTextWidth(text: string, paint?: SkPaint | undefined) {\n    const ids = this.getGlyphIDs(text);\n    const widths = this.getGlyphWidths(ids, paint);\n    return widths.reduce((a, b) => a + b, 0);\n  }\n\n  getMetrics() {\n    const result = this.ref.getMetrics();\n    return {\n      ascent: result.ascent,\n      descent: result.descent,\n      leading: result.leading,\n      bounds: result.bounds\n        ? new JsiSkRect(this.CanvasKit, result.bounds)\n        : undefined,\n    };\n  }\n\n  getGlyphIDs(str: string, numCodePoints?: number) {\n    // TODO: Fix return value in the C++ implementation\n    return [...this.ref.getGlyphIDs(str, numCodePoints)];\n  }\n\n  // TODO: Fix return value in the C++ implementation, it return float32\n  getGlyphWidths(glyphs: number[], paint?: SkPaint | null) {\n    return [\n      ...this.ref.getGlyphWidths(\n        glyphs,\n        paint ? JsiSkPaint.fromValue(paint) : null\n      ),\n    ];\n  }\n\n  getGlyphIntercepts(\n    glyphs: number[],\n    positions: SkPoint[],\n    top: number,\n    bottom: number\n  ) {\n    return [\n      ...this.ref.getGlyphIntercepts(\n        glyphs,\n        positions.map((p) => Array.from(JsiSkPoint.fromValue(p))).flat(),\n        top,\n        bottom\n      ),\n    ];\n  }\n\n  getScaleX() {\n    return this.ref.getScaleX();\n  }\n\n  getSize() {\n    return this.ref.getSize();\n  }\n\n  getSkewX() {\n    return this.ref.getSkewX();\n  }\n\n  isEmbolden() {\n    return this.ref.isEmbolden();\n  }\n\n  getTypeface() {\n    const tf = this.ref.getTypeface();\n    return tf ? new JsiSkTypeface(this.CanvasKit, tf) : null;\n  }\n\n  setEdging(edging: FontEdging) {\n    this.ref.setEdging(ckEnum(edging));\n  }\n\n  setEmbeddedBitmaps(embeddedBitmaps: boolean) {\n    this.ref.setEmbeddedBitmaps(embeddedBitmaps);\n  }\n\n  setHinting(hinting: FontHinting) {\n    this.ref.setHinting(ckEnum(hinting));\n  }\n\n  setLinearMetrics(linearMetrics: boolean) {\n    this.ref.setLinearMetrics(linearMetrics);\n  }\n\n  setScaleX(sx: number) {\n    this.ref.setScaleX(sx);\n  }\n\n  setSize(points: number) {\n    this.ref.setSize(points);\n  }\n\n  setSkewX(sx: number) {\n    this.ref.setSkewX(sx);\n  }\n\n  setEmbolden(embolden: boolean) {\n    this.ref.setEmbolden(embolden);\n  }\n\n  setSubpixel(subpixel: boolean) {\n    this.ref.setSubpixel(subpixel);\n  }\n\n  setTypeface(face: SkTypeface | null) {\n    this.ref.setTypeface(face ? JsiSkTypeface.fromValue(face) : null);\n  }\n}\n"]}