{"version":3,"sources":["JsiSkImageFactory.ts"],"names":["JsiSkImageFactory","Host","constructor","CanvasKit","MakeImageFromEncoded","encoded","image","JsiSkData","fromValue","JsiSkImage","MakeImage","info","data","bytesPerRow","alphaType","colorSpace","ColorSpace","SRGB","colorType","height","width"],"mappings":";;;;;;;AAKA;;AACA;;AACA;;AAEO,MAAMA,iBAAN,SAAgCC,UAAhC,CAA6D;AAClEC,EAAAA,WAAW,CAACC,SAAD,EAAuB;AAChC,UAAMA,SAAN;AACD;;AAEDC,EAAAA,oBAAoB,CAACC,OAAD,EAAkB;AACpC,UAAMC,KAAK,GAAG,KAAKH,SAAL,CAAeC,oBAAf,CACZG,qBAAUC,SAAV,CAAoBH,OAApB,CADY,CAAd;;AAGA,QAAIC,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAO,IAAP;AACD;;AACD,WAAO,IAAIG,sBAAJ,CAAe,KAAKN,SAApB,EAA+BG,KAA/B,CAAP;AACD;;AAEDI,EAAAA,SAAS,CAACC,IAAD,EAAkBC,IAAlB,EAAgCC,WAAhC,EAAqD;AAC5D;AACA,UAAMP,KAAK,GAAG,KAAKH,SAAL,CAAeO,SAAf,CACZ;AACEI,MAAAA,SAAS,EAAE,kBAAOH,IAAI,CAACG,SAAZ,CADb;AAEEC,MAAAA,UAAU,EAAE,KAAKZ,SAAL,CAAea,UAAf,CAA0BC,IAFxC;AAGEC,MAAAA,SAAS,EAAE,kBAAOP,IAAI,CAACO,SAAZ,CAHb;AAIEC,MAAAA,MAAM,EAAER,IAAI,CAACQ,MAJf;AAKEC,MAAAA,KAAK,EAAET,IAAI,CAACS;AALd,KADY,EAQZb,qBAAUC,SAAV,CAAoBI,IAApB,CARY,EASZC,WATY,CAAd;;AAWA,QAAIP,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAO,IAAP;AACD;;AACD,WAAO,IAAIG,sBAAJ,CAAe,KAAKN,SAApB,EAA+BG,KAA/B,CAAP;AACD;;AAhCiE","sourcesContent":["import type { CanvasKit } from \"canvaskit-wasm\";\n\nimport type { SkData, ImageInfo } from \"../types\";\nimport type { ImageFactory } from \"../types/Image/ImageFactory\";\n\nimport { Host, ckEnum } from \"./Host\";\nimport { JsiSkImage } from \"./JsiSkImage\";\nimport { JsiSkData } from \"./JsiSkData\";\n\nexport class JsiSkImageFactory extends Host implements ImageFactory {\n  constructor(CanvasKit: CanvasKit) {\n    super(CanvasKit);\n  }\n\n  MakeImageFromEncoded(encoded: SkData) {\n    const image = this.CanvasKit.MakeImageFromEncoded(\n      JsiSkData.fromValue(encoded)\n    );\n    if (image === null) {\n      return null;\n    }\n    return new JsiSkImage(this.CanvasKit, image);\n  }\n\n  MakeImage(info: ImageInfo, data: SkData, bytesPerRow: number) {\n    // see toSkImageInfo() from canvaskit\n    const image = this.CanvasKit.MakeImage(\n      {\n        alphaType: ckEnum(info.alphaType),\n        colorSpace: this.CanvasKit.ColorSpace.SRGB,\n        colorType: ckEnum(info.colorType),\n        height: info.height,\n        width: info.width,\n      },\n      JsiSkData.fromValue(data),\n      bytesPerRow\n    );\n    if (image === null) {\n      return null;\n    }\n    return new JsiSkImage(this.CanvasKit, image);\n  }\n}\n"]}