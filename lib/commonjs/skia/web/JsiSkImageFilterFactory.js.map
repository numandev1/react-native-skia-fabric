{"version":3,"sources":["JsiSkImageFilterFactory.ts"],"names":["JsiSkImageFilterFactory","Host","constructor","CanvasKit","MakeOffset","dx","dy","input","inputFilter","JsiSkImageFilter","fromValue","filter","ImageFilter","MakeDisplacementMap","channelX","channelY","scale","in1","MakeShader","shader","_input","MakeBlur","sigmaX","sigmaY","mode","MakeColorFilter","cf","JsiSkColorFilter","MakeCompose","outer","inner","MakeDropShadow","color","cropRect","NotImplementedOnRNWeb","MakeDropShadowOnly","MakeErode","rx","ry","MakeDilate","MakeBlend","background","foreground","MakeRuntimeShader","_builder","_childShaderName"],"mappings":"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","sourcesContent":["import type { CanvasKit, ImageFilter } from \"canvaskit-wasm\";\n\nimport type {\n  ColorChannel,\n  ImageFilterFactory,\n  SkColor,\n  SkColorFilter,\n  SkImageFilter,\n  BlendMode,\n  SkRect,\n  SkRuntimeShaderBuilder,\n  SkShader,\n  TileMode,\n} from \"../types\";\n\nimport { Host, NotImplementedOnRNWeb, ckEnum } from \"./Host\";\nimport { JsiSkImageFilter } from \"./JsiSkImageFilter\";\nimport { JsiSkColorFilter } from \"./JsiSkColorFilter\";\n\nexport class JsiSkImageFilterFactory\n  extends Host\n  implements ImageFilterFactory\n{\n  constructor(CanvasKit: CanvasKit) {\n    super(CanvasKit);\n  }\n\n  MakeOffset(dx: number, dy: number, input: SkImageFilter | null) {\n    const inputFilter =\n      input === null ? null : JsiSkImageFilter.fromValue<ImageFilter>(input);\n    const filter = this.CanvasKit.ImageFilter.MakeOffset(dx, dy, inputFilter);\n    return new JsiSkImageFilter(this.CanvasKit, filter);\n  }\n\n  MakeDisplacementMap(\n    channelX: ColorChannel,\n    channelY: ColorChannel,\n    scale: number,\n    in1: SkImageFilter,\n    input: SkImageFilter | null\n  ): SkImageFilter {\n    const inputFilter =\n      input === null ? null : JsiSkImageFilter.fromValue<ImageFilter>(input);\n    const filter = this.CanvasKit.ImageFilter.MakeDisplacementMap(\n      ckEnum(channelX),\n      ckEnum(channelY),\n      scale,\n      JsiSkImageFilter.fromValue(in1),\n      inputFilter\n    );\n    return new JsiSkImageFilter(this.CanvasKit, filter);\n  }\n\n  MakeShader(shader: SkShader, _input: SkImageFilter | null): SkImageFilter {\n    const filter = this.CanvasKit.ImageFilter.MakeShader(\n      JsiSkImageFilter.fromValue(shader)\n    );\n    return new JsiSkImageFilter(this.CanvasKit, filter);\n  }\n\n  MakeBlur(\n    sigmaX: number,\n    sigmaY: number,\n    mode: TileMode,\n    input: SkImageFilter | null\n  ) {\n    return new JsiSkImageFilter(\n      this.CanvasKit,\n      this.CanvasKit.ImageFilter.MakeBlur(\n        sigmaX,\n        sigmaY,\n        ckEnum(mode),\n        input === null ? null : JsiSkImageFilter.fromValue(input)\n      )\n    );\n  }\n\n  MakeColorFilter(cf: SkColorFilter, input: SkImageFilter | null) {\n    return new JsiSkImageFilter(\n      this.CanvasKit,\n      this.CanvasKit.ImageFilter.MakeColorFilter(\n        JsiSkColorFilter.fromValue(cf),\n        input === null ? null : JsiSkImageFilter.fromValue(input)\n      )\n    );\n  }\n\n  MakeCompose(outer: SkImageFilter | null, inner: SkImageFilter | null) {\n    return new JsiSkImageFilter(\n      this.CanvasKit,\n      this.CanvasKit.ImageFilter.MakeCompose(\n        outer === null ? null : JsiSkImageFilter.fromValue(outer),\n        inner === null ? null : JsiSkImageFilter.fromValue(inner)\n      )\n    );\n  }\n\n  MakeDropShadow(\n    dx: number,\n    dy: number,\n    sigmaX: number,\n    sigmaY: number,\n    color: SkColor,\n    input: SkImageFilter | null,\n    cropRect?: SkRect\n  ): SkImageFilter {\n    const inputFilter =\n      input === null ? null : JsiSkImageFilter.fromValue<ImageFilter>(input);\n    if (cropRect) {\n      throw new NotImplementedOnRNWeb(\n        \"The cropRect argument is not yet supported on React Native Web.\"\n      );\n    }\n    const filter = this.CanvasKit.ImageFilter.MakeDropShadow(\n      dx,\n      dy,\n      sigmaX,\n      sigmaY,\n      color,\n      inputFilter\n    );\n    return new JsiSkImageFilter(this.CanvasKit, filter);\n  }\n\n  MakeDropShadowOnly(\n    dx: number,\n    dy: number,\n    sigmaX: number,\n    sigmaY: number,\n    color: SkColor,\n    input: SkImageFilter | null,\n    cropRect?: SkRect\n  ): SkImageFilter {\n    const inputFilter =\n      input === null ? null : JsiSkImageFilter.fromValue<ImageFilter>(input);\n    if (cropRect) {\n      throw new NotImplementedOnRNWeb(\n        \"The cropRect argument is not yet supported on React Native Web.\"\n      );\n    }\n    const filter = this.CanvasKit.ImageFilter.MakeDropShadowOnly(\n      dx,\n      dy,\n      sigmaX,\n      sigmaY,\n      color,\n      inputFilter\n    );\n    return new JsiSkImageFilter(this.CanvasKit, filter);\n  }\n\n  MakeErode(\n    rx: number,\n    ry: number,\n    input: SkImageFilter | null,\n    cropRect?: SkRect\n  ): SkImageFilter {\n    const inputFilter =\n      input === null ? null : JsiSkImageFilter.fromValue<ImageFilter>(input);\n    if (cropRect) {\n      throw new NotImplementedOnRNWeb(\n        \"The cropRect argument is not yet supported on React Native Web.\"\n      );\n    }\n    const filter = this.CanvasKit.ImageFilter.MakeErode(rx, ry, inputFilter);\n    return new JsiSkImageFilter(this.CanvasKit, filter);\n  }\n\n  MakeDilate(\n    rx: number,\n    ry: number,\n    input: SkImageFilter | null,\n    cropRect?: SkRect\n  ): SkImageFilter {\n    const inputFilter =\n      input === null ? null : JsiSkImageFilter.fromValue<ImageFilter>(input);\n    if (cropRect) {\n      throw new NotImplementedOnRNWeb(\n        \"The cropRect argument is not yet supported on React Native Web.\"\n      );\n    }\n    const filter = this.CanvasKit.ImageFilter.MakeDilate(rx, ry, inputFilter);\n    return new JsiSkImageFilter(this.CanvasKit, filter);\n  }\n\n  MakeBlend(\n    mode: BlendMode,\n    background: SkImageFilter,\n    foreground: SkImageFilter | null,\n    cropRect?: SkRect\n  ): SkImageFilter {\n    const inputFilter =\n      foreground === null\n        ? null\n        : JsiSkImageFilter.fromValue<ImageFilter>(foreground);\n    if (cropRect) {\n      throw new NotImplementedOnRNWeb(\n        \"The cropRect argument is not yet supported on React Native Web.\"\n      );\n    }\n    const filter = this.CanvasKit.ImageFilter.MakeBlend(\n      ckEnum(mode),\n      JsiSkImageFilter.fromValue(background),\n      inputFilter\n    );\n    return new JsiSkImageFilter(this.CanvasKit, filter);\n  }\n\n  MakeRuntimeShader(\n    _builder: SkRuntimeShaderBuilder,\n    _childShaderName: string | null,\n    _input: SkImageFilter | null\n  ): SkImageFilter {\n    throw new NotImplementedOnRNWeb();\n  }\n}\n"]}