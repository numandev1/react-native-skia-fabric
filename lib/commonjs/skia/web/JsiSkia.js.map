{"version":3,"sources":["JsiSkia.ts"],"names":["JsiSkApi","CanvasKit","Point","x","y","JsiSkPoint","Float32Array","of","RuntimeShaderBuilder","_","Error","RRectXY","rect","rx","ry","JsiSkRRect","JsiSkRect","fromValue","RSXform","scos","ssin","tx","ty","JsiSkRSXform","Color","ContourMeasureIter","path","forceClosed","resScale","JsiSkContourMeasureIter","JsiSkPath","Paint","paint","JsiSkPaint","setAntiAlias","PictureRecorder","JsiSkPictureRecorder","Picture","JsiSkPictureFactory","Path","JsiSkPathFactory","Matrix","matrix","JsiSkMatrix","identity","ColorFilter","JsiSkColorFilterFactory","Font","typeface","size","JsiSkFont","undefined","JsiSkTypeface","Typeface","JsiSkTypefaceFactory","MaskFilter","JsiSkMaskFilterFactory","RuntimeEffect","JsiSkRuntimeEffectFactory","ImageFilter","JsiSkImageFilterFactory","Shader","JsiSkShaderFactory","PathEffect","JsiSkPathEffectFactory","MakeVertices","bind","Data","JsiSkDataFactory","Image","JsiSkImageFactory","SVG","JsiSkSVGFactory","TextBlob","JsiSkTextBlobFactory","XYWHRect","width","height","Surface","JsiSkSurfaceFactory"],"mappings":"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","sourcesContent":["import type { CanvasKit } from \"canvaskit-wasm\";\n\nimport type {\n  SkContourMeasureIter,\n  Skia,\n  SkPath,\n  SkRect,\n  SkRuntimeEffect,\n  SkRuntimeShaderBuilder,\n  SkTypeface,\n} from \"../types\";\n\nimport { JsiSkPoint } from \"./JsiSkPoint\";\nimport { JsiSkPaint } from \"./JsiSkPaint\";\nimport { JsiSkRect } from \"./JsiSkRect\";\nimport { Color } from \"./JsiSkColor\";\nimport { JsiSkSurfaceFactory } from \"./JsiSkSurfaceFactory\";\nimport { JsiSkRRect } from \"./JsiSkRRect\";\nimport { JsiSkRSXform } from \"./JsiSkRSXform\";\nimport { JsiSkContourMeasureIter } from \"./JsiSkContourMeasureIter\";\nimport { JsiSkPictureRecorder } from \"./JsiSkPictureRecorder\";\nimport { JsiSkPictureFactory } from \"./JsiSkPictureFactory\";\nimport { JsiSkPathFactory } from \"./JsiSkPathFactory\";\nimport { JsiSkMatrix } from \"./JsiSkMatrix\";\nimport { JsiSkColorFilterFactory } from \"./JsiSkColorFilterFactory\";\nimport { JsiSkTypefaceFactory } from \"./JsiSkTypefaceFactory\";\nimport { JsiSkMaskFilterFactory } from \"./JsiSkMaskFilterFactory\";\nimport { JsiSkRuntimeEffectFactory } from \"./JsiSkRuntimeEffectFactory\";\nimport { JsiSkImageFilterFactory } from \"./JsiSkImageFilterFactory\";\nimport { JsiSkShaderFactory } from \"./JsiSkShaderFactory\";\nimport { JsiSkPathEffectFactory } from \"./JsiSkPathEffectFactory\";\nimport { JsiSkDataFactory } from \"./JsiSkDataFactory\";\nimport { JsiSkImageFactory } from \"./JsiSkImageFactory\";\nimport { JsiSkSVGFactory } from \"./JsiSkSVGFactory\";\nimport { JsiSkTextBlobFactory } from \"./JsiSkTextBlobFactory\";\nimport { JsiSkFont } from \"./JsiSkFont\";\nimport { MakeVertices } from \"./JsiSkVerticesFactory\";\nimport { JsiSkPath } from \"./JsiSkPath\";\nimport { JsiSkTypeface } from \"./JsiSkTypeface\";\n\nexport const JsiSkApi = (CanvasKit: CanvasKit): Skia => ({\n  Point: (x: number, y: number) =>\n    new JsiSkPoint(CanvasKit, Float32Array.of(x, y)),\n  RuntimeShaderBuilder: (_: SkRuntimeEffect): SkRuntimeShaderBuilder => {\n    throw new Error(\"Not implemented on React Native Web\");\n  },\n  RRectXY: (rect: SkRect, rx: number, ry: number) =>\n    new JsiSkRRect(\n      CanvasKit,\n      CanvasKit.RRectXY(JsiSkRect.fromValue(CanvasKit, rect), rx, ry)\n    ),\n  RSXform: (scos: number, ssin: number, tx: number, ty: number) =>\n    new JsiSkRSXform(CanvasKit, Float32Array.of(scos, ssin, tx, ty)),\n  Color,\n  ContourMeasureIter: (\n    path: SkPath,\n    forceClosed: boolean,\n    resScale: number\n  ): SkContourMeasureIter =>\n    new JsiSkContourMeasureIter(\n      CanvasKit,\n      new CanvasKit.ContourMeasureIter(\n        JsiSkPath.fromValue(path),\n        forceClosed,\n        resScale\n      )\n    ),\n  Paint: () => {\n    const paint = new JsiSkPaint(CanvasKit, new CanvasKit.Paint());\n    paint.setAntiAlias(true);\n    return paint;\n  },\n  PictureRecorder: () =>\n    new JsiSkPictureRecorder(CanvasKit, new CanvasKit.PictureRecorder()),\n  Picture: new JsiSkPictureFactory(CanvasKit),\n  Path: new JsiSkPathFactory(CanvasKit),\n  Matrix: (matrix?: readonly number[]) =>\n    new JsiSkMatrix(\n      CanvasKit,\n      matrix\n        ? Float32Array.of(...matrix)\n        : Float32Array.of(...CanvasKit.Matrix.identity())\n    ),\n  ColorFilter: new JsiSkColorFilterFactory(CanvasKit),\n  Font: (typeface?: SkTypeface, size?: number) =>\n    new JsiSkFont(\n      CanvasKit,\n      new CanvasKit.Font(\n        typeface === undefined ? null : JsiSkTypeface.fromValue(typeface),\n        size\n      )\n    ),\n  Typeface: new JsiSkTypefaceFactory(CanvasKit),\n  MaskFilter: new JsiSkMaskFilterFactory(CanvasKit),\n  RuntimeEffect: new JsiSkRuntimeEffectFactory(CanvasKit),\n  ImageFilter: new JsiSkImageFilterFactory(CanvasKit),\n  Shader: new JsiSkShaderFactory(CanvasKit),\n  PathEffect: new JsiSkPathEffectFactory(CanvasKit),\n  MakeVertices: MakeVertices.bind(null, CanvasKit),\n  Data: new JsiSkDataFactory(CanvasKit),\n  Image: new JsiSkImageFactory(CanvasKit),\n  SVG: new JsiSkSVGFactory(CanvasKit),\n  TextBlob: new JsiSkTextBlobFactory(CanvasKit),\n  XYWHRect: (x: number, y: number, width: number, height: number) => {\n    return new JsiSkRect(CanvasKit, CanvasKit.XYWHRect(x, y, width, height));\n  },\n  Surface: new JsiSkSurfaceFactory(CanvasKit),\n});\n"]}