{"version":3,"sources":["JsiSkPictureFactory.ts"],"names":["JsiSkPictureFactory","Host","constructor","CanvasKit","MakePicture","bytes","pic","JsiSkPicture"],"mappings":";;;;;;;AAIA;;AACA;;AAEO,MAAMA,mBAAN,SAAkCC,UAAlC,CAAiE;AACtEC,EAAAA,WAAW,CAACC,SAAD,EAAuB;AAChC,UAAMA,SAAN;AACD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAkC;AAC3C,UAAMC,GAAG,GAAG,KAAKH,SAAL,CAAeC,WAAf,CAA2BC,KAA3B,CAAZ;;AACA,QAAIC,GAAG,KAAK,IAAZ,EAAkB;AAChB,aAAO,IAAP;AACD;;AACD,WAAO,IAAIC,0BAAJ,CAAiB,KAAKJ,SAAtB,EAAiCG,GAAjC,CAAP;AACD;;AAXqE","sourcesContent":["import type { CanvasKit } from \"canvaskit-wasm\";\n\nimport type { PictureFactory } from \"../types\";\n\nimport { Host } from \"./Host\";\nimport { JsiSkPicture } from \"./JsiSkPicture\";\n\nexport class JsiSkPictureFactory extends Host implements PictureFactory {\n  constructor(CanvasKit: CanvasKit) {\n    super(CanvasKit);\n  }\n\n  MakePicture(bytes: Uint8Array | ArrayBuffer) {\n    const pic = this.CanvasKit.MakePicture(bytes);\n    if (pic === null) {\n      return null;\n    }\n    return new JsiSkPicture(this.CanvasKit, pic);\n  }\n}\n"]}