{"version":3,"sources":["JsiSkShaderFactory.ts"],"names":["JsiSkShaderFactory","Host","constructor","CanvasKit","MakeLinearGradient","start","end","colors","pos","mode","localMatrix","flags","JsiSkShader","Shader","JsiSkPoint","fromValue","undefined","JsiSkMatrix","MakeRadialGradient","center","radius","MakeTwoPointConicalGradient","startRadius","endRadius","MakeSweepGradient","cx","cy","startAngleInDegrees","endAngleInDegrees","MakeTurbulence","baseFreqX","baseFreqY","octaves","seed","tileW","tileH","MakeFractalNoise","MakeBlend","one","two","MakeColor","color","ColorSpace","SRGB"],"mappings":"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","sourcesContent":["import type { CanvasKit } from \"canvaskit-wasm\";\n\nimport type {\n  BlendMode,\n  SkColor,\n  SkMatrix,\n  SkPoint,\n  SkShader,\n  TileMode,\n} from \"../types\";\nimport type { ShaderFactory } from \"../types/Shader/ShaderFactory\";\n\nimport { Host, ckEnum } from \"./Host\";\nimport { JsiSkMatrix } from \"./JsiSkMatrix\";\nimport { JsiSkPoint } from \"./JsiSkPoint\";\nimport { JsiSkShader } from \"./JsiSkShader\";\n\nexport class JsiSkShaderFactory extends Host implements ShaderFactory {\n  constructor(CanvasKit: CanvasKit) {\n    super(CanvasKit);\n  }\n\n  MakeLinearGradient(\n    start: SkPoint,\n    end: SkPoint,\n    colors: SkColor[],\n    pos: number[] | null,\n    mode: TileMode,\n    localMatrix?: SkMatrix,\n    flags?: number\n  ) {\n    return new JsiSkShader(\n      this.CanvasKit,\n      this.CanvasKit.Shader.MakeLinearGradient(\n        JsiSkPoint.fromValue(start),\n        JsiSkPoint.fromValue(end),\n        colors,\n        pos,\n        ckEnum(mode),\n        localMatrix === undefined\n          ? undefined\n          : JsiSkMatrix.fromValue(localMatrix),\n        flags\n      )\n    );\n  }\n\n  MakeRadialGradient(\n    center: SkPoint,\n    radius: number,\n    colors: SkColor[],\n    pos: number[] | null,\n    mode: TileMode,\n    localMatrix?: SkMatrix,\n    flags?: number\n  ) {\n    return new JsiSkShader(\n      this.CanvasKit,\n      this.CanvasKit.Shader.MakeRadialGradient(\n        JsiSkPoint.fromValue(center),\n        radius,\n        colors,\n        pos,\n        ckEnum(mode),\n        localMatrix === undefined\n          ? undefined\n          : JsiSkMatrix.fromValue(localMatrix),\n        flags\n      )\n    );\n  }\n\n  MakeTwoPointConicalGradient(\n    start: SkPoint,\n    startRadius: number,\n    end: SkPoint,\n    endRadius: number,\n    colors: SkColor[],\n    pos: number[] | null,\n    mode: TileMode,\n    localMatrix?: SkMatrix,\n    flags?: number\n  ) {\n    return new JsiSkShader(\n      this.CanvasKit,\n      this.CanvasKit.Shader.MakeTwoPointConicalGradient(\n        JsiSkPoint.fromValue(start),\n        startRadius,\n        JsiSkPoint.fromValue(end),\n        endRadius,\n        colors,\n        pos,\n        ckEnum(mode),\n        localMatrix === undefined\n          ? undefined\n          : JsiSkMatrix.fromValue(localMatrix),\n        flags\n      )\n    );\n  }\n\n  MakeSweepGradient(\n    cx: number,\n    cy: number,\n    colors: SkColor[],\n    pos: number[] | null,\n    mode: TileMode,\n    localMatrix?: SkMatrix | null,\n    flags?: number,\n    startAngleInDegrees?: number,\n    endAngleInDegrees?: number\n  ) {\n    return new JsiSkShader(\n      this.CanvasKit,\n      this.CanvasKit.Shader.MakeSweepGradient(\n        cx,\n        cy,\n        colors,\n        pos,\n        ckEnum(mode),\n        localMatrix === undefined || localMatrix === null\n          ? undefined\n          : JsiSkMatrix.fromValue(localMatrix),\n        flags,\n        startAngleInDegrees,\n        endAngleInDegrees\n      )\n    );\n  }\n\n  MakeTurbulence(\n    baseFreqX: number,\n    baseFreqY: number,\n    octaves: number,\n    seed: number,\n    tileW: number,\n    tileH: number\n  ) {\n    return new JsiSkShader(\n      this.CanvasKit,\n      this.CanvasKit.Shader.MakeTurbulence(\n        baseFreqX,\n        baseFreqY,\n        octaves,\n        seed,\n        tileW,\n        tileH\n      )\n    );\n  }\n\n  MakeFractalNoise(\n    baseFreqX: number,\n    baseFreqY: number,\n    octaves: number,\n    seed: number,\n    tileW: number,\n    tileH: number\n  ) {\n    return new JsiSkShader(\n      this.CanvasKit,\n      this.CanvasKit.Shader.MakeFractalNoise(\n        baseFreqX,\n        baseFreqY,\n        octaves,\n        seed,\n        tileW,\n        tileH\n      )\n    );\n  }\n\n  MakeBlend(mode: BlendMode, one: SkShader, two: SkShader) {\n    return new JsiSkShader(\n      this.CanvasKit,\n      this.CanvasKit.Shader.MakeBlend(\n        ckEnum(mode),\n        JsiSkShader.fromValue(one),\n        JsiSkShader.fromValue(two)\n      )\n    );\n  }\n\n  MakeColor(color: SkColor) {\n    return new JsiSkShader(\n      this.CanvasKit,\n      this.CanvasKit.Shader.MakeColor(color, this.CanvasKit.ColorSpace.SRGB)\n    );\n  }\n}\n"]}