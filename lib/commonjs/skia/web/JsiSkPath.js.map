{"version":3,"sources":["JsiSkPath.ts"],"names":["CommandCount","PathVerb","Move","Line","Quad","Conic","Cubic","Close","JsiSkPath","HostObject","constructor","CanvasKit","ref","addArc","oval","startAngleInDegrees","sweepAngleInDegrees","JsiSkRect","fromValue","addOval","isCCW","startIndex","countPoints","addPoly","points","close","map","p","Array","from","JsiSkPoint","flat","moveTo","x","y","lineTo","makeAsWinding","result","offset","dx","dy","rArcTo","rx","ry","xAxisRotateInDegrees","useSmallArc","rConicTo","dx1","dy1","dx2","dy2","w","rCubicTo","cpx1","cpy1","cpx2","cpy2","rMoveTo","rLineTo","rQuadTo","x1","y1","x2","y2","setFillType","fill","setIsVolatile","volatile","stroke","opts","undefined","width","miter_limit","precision","join","cap","reset","rewind","computeTightBounds","arcToOval","forceMoveTo","arcToRotated","arcToTangent","radius","conicTo","contains","copy","cubicTo","dash","on","off","phase","equals","other","getBounds","getFillType","value","quadTo","addRect","rect","addRRect","rrect","JsiSkRRect","getPoint","index","isEmpty","isVolatile","addCircle","r","getLastPt","op","path","simplify","toSVGString","trim","startT","stopT","isComplement","transform","m3","JsiSkMatrix","interpolate","end","t","Path","MakeFromPathInterpolation","isInterpolatable","path2","CanInterpolate","toCmds","cmds","reduce","acc","cmd","i","push","current","length"],"mappings":"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","sourcesContent":["import type { CanvasKit, Path } from \"canvaskit-wasm\";\n\nimport { PathVerb } from \"../types\";\nimport type {\n  FillType,\n  PathCommand,\n  PathOp,\n  SkMatrix,\n  SkPath,\n  SkPoint,\n  SkRect,\n  SkRRect,\n  StrokeOpts,\n} from \"../types\";\n\nimport { ckEnum, HostObject, optEnum } from \"./Host\";\nimport { JsiSkPoint } from \"./JsiSkPoint\";\nimport { JsiSkRect } from \"./JsiSkRect\";\nimport { JsiSkRRect } from \"./JsiSkRRect\";\nimport { JsiSkMatrix } from \"./JsiSkMatrix\";\n\nconst CommandCount = {\n  [PathVerb.Move]: 3,\n  [PathVerb.Line]: 3,\n  [PathVerb.Quad]: 5,\n  [PathVerb.Conic]: 6,\n  [PathVerb.Cubic]: 7,\n  [PathVerb.Close]: 1,\n};\n\nexport class JsiSkPath extends HostObject<Path, \"Path\"> implements SkPath {\n  constructor(CanvasKit: CanvasKit, ref: Path) {\n    super(CanvasKit, ref, \"Path\");\n  }\n\n  addArc(\n    oval: SkRect,\n    startAngleInDegrees: number,\n    sweepAngleInDegrees: number\n  ) {\n    this.ref.addArc(\n      JsiSkRect.fromValue(this.CanvasKit, oval),\n      startAngleInDegrees,\n      sweepAngleInDegrees\n    );\n    return this;\n  }\n\n  addOval(oval: SkRect, isCCW?: boolean, startIndex?: number) {\n    this.ref.addOval(\n      JsiSkRect.fromValue(this.CanvasKit, oval),\n      isCCW,\n      startIndex\n    );\n    return this;\n  }\n\n  countPoints() {\n    return this.ref.countPoints();\n  }\n\n  addPoly(points: SkPoint[], close: boolean) {\n    this.ref.addPoly(\n      points.map((p) => Array.from(JsiSkPoint.fromValue(p))).flat(),\n      close\n    );\n    return this;\n  }\n\n  moveTo(x: number, y: number) {\n    this.ref.moveTo(x, y);\n    return this;\n  }\n\n  lineTo(x: number, y: number) {\n    this.ref.lineTo(x, y);\n    return this;\n  }\n\n  makeAsWinding() {\n    const result = this.ref.makeAsWinding();\n    return result === null ? result : this;\n  }\n\n  offset(dx: number, dy: number) {\n    this.ref.offset(dx, dy);\n    return this;\n  }\n\n  rArcTo(\n    rx: number,\n    ry: number,\n    xAxisRotateInDegrees: number,\n    useSmallArc: boolean,\n    isCCW: boolean,\n    dx: number,\n    dy: number\n  ) {\n    this.ref.rArcTo(rx, ry, xAxisRotateInDegrees, useSmallArc, isCCW, dx, dy);\n    return this;\n  }\n\n  rConicTo(dx1: number, dy1: number, dx2: number, dy2: number, w: number) {\n    this.ref.rConicTo(dx1, dy1, dx2, dy2, w);\n    return this;\n  }\n\n  rCubicTo(\n    cpx1: number,\n    cpy1: number,\n    cpx2: number,\n    cpy2: number,\n    x: number,\n    y: number\n  ) {\n    this.ref.rCubicTo(cpx1, cpy1, cpx2, cpy2, x, y);\n    return this;\n  }\n\n  rMoveTo(x: number, y: number) {\n    this.ref.rMoveTo(x, y);\n    return this;\n  }\n\n  rLineTo(x: number, y: number) {\n    this.ref.rLineTo(x, y);\n    return this;\n  }\n\n  rQuadTo(x1: number, y1: number, x2: number, y2: number) {\n    this.ref.rQuadTo(x1, y1, x2, y2);\n    return this;\n  }\n\n  setFillType(fill: FillType) {\n    this.ref.setFillType(ckEnum(fill));\n  }\n\n  setIsVolatile(volatile: boolean) {\n    this.ref.setIsVolatile(volatile);\n  }\n\n  stroke(opts?: StrokeOpts) {\n    const result = this.ref.stroke(\n      opts === undefined\n        ? undefined\n        : {\n            width: opts.width,\n            // eslint-disable-next-line camelcase\n            miter_limit: opts.width,\n            precision: opts.width,\n            join: optEnum(opts.join),\n            cap: optEnum(opts.cap),\n          }\n    );\n    return result === null ? result : this;\n  }\n\n  close() {\n    this.ref.close();\n  }\n\n  reset() {\n    this.ref.reset();\n  }\n\n  rewind() {\n    this.ref.rewind();\n  }\n\n  computeTightBounds(): SkRect {\n    return new JsiSkRect(this.CanvasKit, this.ref.computeTightBounds());\n  }\n\n  arcToOval(\n    oval: SkRect,\n    startAngleInDegrees: number,\n    sweepAngleInDegrees: number,\n    forceMoveTo: boolean\n  ) {\n    this.ref.arcToOval(\n      JsiSkRect.fromValue(this.CanvasKit, oval),\n      startAngleInDegrees,\n      sweepAngleInDegrees,\n      forceMoveTo\n    );\n    return this;\n  }\n\n  arcToRotated(\n    rx: number,\n    ry: number,\n    xAxisRotateInDegrees: number,\n    useSmallArc: boolean,\n    isCCW: boolean,\n    x: number,\n    y: number\n  ) {\n    this.ref.arcToRotated(\n      rx,\n      ry,\n      xAxisRotateInDegrees,\n      useSmallArc,\n      isCCW,\n      x,\n      y\n    );\n    return this;\n  }\n\n  arcToTangent(x1: number, y1: number, x2: number, y2: number, radius: number) {\n    this.ref.arcToTangent(x1, y1, x2, y2, radius);\n    return this;\n  }\n\n  conicTo(x1: number, y1: number, x2: number, y2: number, w: number) {\n    this.ref.conicTo(x1, y1, x2, y2, w);\n    return this;\n  }\n\n  contains(x: number, y: number) {\n    return this.ref.contains(x, y);\n  }\n\n  copy() {\n    return new JsiSkPath(this.CanvasKit, this.ref.copy());\n  }\n\n  cubicTo(\n    cpx1: number,\n    cpy1: number,\n    cpx2: number,\n    cpy2: number,\n    x: number,\n    y: number\n  ) {\n    this.ref.cubicTo(cpx1, cpy1, cpx2, cpy2, x, y);\n    return this;\n  }\n\n  dash(on: number, off: number, phase: number) {\n    return this.ref.dash(on, off, phase);\n  }\n\n  equals(other: SkPath) {\n    return this.ref.equals(JsiSkPath.fromValue(other));\n  }\n\n  getBounds() {\n    return new JsiSkRect(this.CanvasKit, this.ref.getBounds());\n  }\n\n  getFillType() {\n    return this.ref.getFillType().value;\n  }\n\n  quadTo(x1: number, y1: number, x2: number, y2: number) {\n    this.ref.quadTo(x1, y1, x2, y2);\n  }\n\n  addRect(rect: SkRect, isCCW?: boolean) {\n    this.ref.addRect(JsiSkRect.fromValue(this.CanvasKit, rect), isCCW);\n  }\n\n  addRRect(rrect: SkRRect, isCCW?: boolean) {\n    this.ref.addRRect(JsiSkRRect.fromValue(this.CanvasKit, rrect), isCCW);\n    return this;\n  }\n\n  getPoint(index: number) {\n    return new JsiSkPoint(this.CanvasKit, this.ref.getPoint(index));\n  }\n\n  isEmpty() {\n    return this.ref.isEmpty();\n  }\n\n  isVolatile() {\n    return this.ref.isVolatile();\n  }\n\n  addCircle(x: number, y: number, r: number) {\n    this.ref.addCircle(x, y, r);\n    return this;\n  }\n\n  getLastPt() {\n    return new JsiSkPoint(\n      this.CanvasKit,\n      this.ref.getPoint(this.ref.countPoints() - 1)\n    );\n  }\n\n  op(path: SkPath, op: PathOp) {\n    return this.ref.op(JsiSkPath.fromValue(path), ckEnum(op));\n  }\n\n  simplify() {\n    return this.ref.simplify();\n  }\n\n  toSVGString() {\n    return this.ref.toSVGString();\n  }\n\n  trim(startT: number, stopT: number, isComplement: boolean) {\n    const result = this.ref.trim(startT, stopT, isComplement);\n    return result === null ? result : this;\n  }\n\n  transform(m3: SkMatrix) {\n    this.ref.transform(JsiSkMatrix.fromValue(m3));\n  }\n\n  interpolate(end: SkPath, t: number) {\n    const path = this.CanvasKit.Path.MakeFromPathInterpolation(\n      this.ref,\n      JsiSkPath.fromValue(end),\n      t\n    );\n    if (path === null) {\n      return null;\n    }\n    return new JsiSkPath(this.CanvasKit, path);\n  }\n\n  isInterpolatable(path2: SkPath): boolean {\n    return this.CanvasKit.Path.CanInterpolate(\n      this.ref,\n      JsiSkPath.fromValue(path2)\n    );\n  }\n\n  toCmds() {\n    const cmds = this.ref.toCmds();\n    const result = cmds.reduce<PathCommand[]>((acc, cmd, i) => {\n      if (i === 0) {\n        acc.push([]);\n      }\n      const current = acc[acc.length - 1];\n      if (current.length === 0) {\n        current.push(cmd);\n        const length = CommandCount[current[0] as PathVerb];\n        if (current.length === length && i !== cmds.length - 1) {\n          acc.push([]);\n        }\n      } else {\n        const length = CommandCount[current[0] as PathVerb];\n        if (current.length < length) {\n          current.push(cmd);\n        }\n        if (current.length === length && i !== cmds.length - 1) {\n          acc.push([]);\n        }\n      }\n      return acc;\n    }, []);\n    return result;\n  }\n}\n"]}