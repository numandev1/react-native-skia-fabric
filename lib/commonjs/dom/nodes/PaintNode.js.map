{"version":3,"sources":["PaintNode.ts"],"names":["PaintNode","JsiDeclarationNode","constructor","ctx","props","DeclarationType","Paint","NodeType","materialize","color","strokeWidth","blendMode","style","strokeJoin","strokeCap","strokeMiter","opacity","antiAlias","paint","Skia","undefined","setColor","Color","setStrokeWidth","setBlendMode","BlendMode","setStyle","PaintStyle","setStrokeJoin","StrokeJoin","setStrokeCap","StrokeCap","setStrokeMiter","setAlphaf","setAntiAlias","_children","forEach","child","isShader","setShader","isColorFilter","setColorFilter","isImageFilter","setImageFilter","isMaskFilter","setMaskFilter","isPathEffect","setPathEffect","Error","type"],"mappings":"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","sourcesContent":["import type { SkPaint } from \"../../skia/types\";\nimport { StrokeCap, StrokeJoin, PaintStyle, BlendMode } from \"../../skia/types\";\nimport type { DeclarationNode, PaintProps } from \"../types\";\nimport { DeclarationType, NodeType } from \"../types\";\n\nimport { enumKey } from \"./datatypes\";\nimport type { NodeContext } from \"./Node\";\nimport { JsiDeclarationNode } from \"./Node\";\n\nexport class PaintNode\n  extends JsiDeclarationNode<PaintProps, SkPaint>\n  implements DeclarationNode<PaintProps, SkPaint>\n{\n  constructor(ctx: NodeContext, props: PaintProps = {}) {\n    super(ctx, DeclarationType.Paint, NodeType.Paint, props);\n  }\n\n  materialize() {\n    const {\n      color,\n      strokeWidth,\n      blendMode,\n      style,\n      strokeJoin,\n      strokeCap,\n      strokeMiter,\n      opacity,\n      antiAlias,\n    } = this.props;\n    const paint = this.Skia.Paint();\n    if (color !== undefined) {\n      paint.setColor(this.Skia.Color(color));\n    }\n    if (strokeWidth !== undefined) {\n      paint.setStrokeWidth(strokeWidth);\n    }\n    if (blendMode !== undefined) {\n      paint.setBlendMode(BlendMode[enumKey(blendMode)]);\n    }\n    if (style !== undefined) {\n      paint.setStyle(PaintStyle[enumKey(style)]);\n    }\n    if (strokeJoin !== undefined) {\n      paint.setStrokeJoin(StrokeJoin[enumKey(strokeJoin)]);\n    }\n    if (strokeCap !== undefined) {\n      paint.setStrokeCap(StrokeCap[enumKey(strokeCap)]);\n    }\n    if (strokeMiter !== undefined) {\n      paint.setStrokeMiter(strokeMiter);\n    }\n    if (opacity !== undefined) {\n      paint.setAlphaf(opacity);\n    }\n    if (antiAlias !== undefined) {\n      paint.setAntiAlias(antiAlias);\n    }\n    this._children.forEach((child) => {\n      if (child instanceof JsiDeclarationNode) {\n        if (child.isShader()) {\n          paint.setShader(child.materialize());\n        } else if (child.isColorFilter()) {\n          paint.setColorFilter(child.materialize());\n        } else if (child.isImageFilter()) {\n          paint.setImageFilter(child.materialize());\n        } else if (child.isMaskFilter()) {\n          paint.setMaskFilter(child.materialize());\n        } else if (child.isPathEffect()) {\n          paint.setPathEffect(child.materialize());\n        } else {\n          throw new Error(`Unknown paint child ${child.type}`);\n        }\n      }\n    });\n    return paint;\n  }\n}\n"]}