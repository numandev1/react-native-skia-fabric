{"version":3,"sources":["DiffRectNode.ts"],"names":["DiffRectNode","JsiDrawingNode","constructor","ctx","props","NodeType","DiffRect","deriveProps","draw","canvas","paint","outer","inner","drawDRRect"],"mappings":";;;;;;;AACA;;AACA;;AAGO,MAAMA,YAAN,SAA2BC,2BAA3B,CAA+D;AACpEC,EAAAA,WAAW,CAACC,GAAD,EAAmBC,KAAnB,EAAyC;AAClD,UAAMD,GAAN,EAAWE,gBAASC,QAApB,EAA8BF,KAA9B;AACD;;AAEDG,EAAAA,WAAW,GAAG;AACZ,WAAO,IAAP;AACD;;AAEDC,EAAAA,IAAI,OAAoC;AAAA,QAAnC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAmC;AACtC,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKR,KAA9B;AACAK,IAAAA,MAAM,CAACI,UAAP,CAAkBF,KAAlB,EAAyBC,KAAzB,EAAgCF,KAAhC;AACD;;AAZmE","sourcesContent":["import type { DiffRectProps, DrawingContext } from \"../../types\";\nimport { NodeType } from \"../../types\";\nimport { JsiDrawingNode } from \"../DrawingNode\";\nimport type { NodeContext } from \"../Node\";\n\nexport class DiffRectNode extends JsiDrawingNode<DiffRectProps, null> {\n  constructor(ctx: NodeContext, props: DiffRectProps) {\n    super(ctx, NodeType.DiffRect, props);\n  }\n\n  deriveProps() {\n    return null;\n  }\n\n  draw({ canvas, paint }: DrawingContext) {\n    const { outer, inner } = this.props;\n    canvas.drawDRRect(outer, inner, paint);\n  }\n}\n"]}