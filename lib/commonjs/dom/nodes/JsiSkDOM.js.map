{"version":3,"sources":["JsiSkDOM.ts"],"names":["JsiSkDOM","constructor","ctx","Group","props","GroupNode","Paint","PaintNode","Fill","FillNode","Image","ImageNode","Circle","CircleNode","Path","PathNode","CustomDrawing","CustomDrawingNode","Line","LineNode","Oval","OvalNode","Patch","PatchNode","Points","PointsNode","Rect","RectNode","RRect","RRectNode","Vertices","VerticesNode","Text","TextNode","TextPath","TextPathNode","TextBlob","TextBlobNode","Glyphs","GlyphsNode","DiffRect","DiffRectNode","Picture","PictureNode","ImageSVG","ImageSVGNode","BlurMaskFilter","BlurMaskFilterNode","BlendImageFilter","BlendImageFilterNode","DropShadowImageFilter","DropShadowImageFilterNode","DisplacementMapImageFilter","DisplacementMapImageFilterNode","BlurImageFilter","BlurImageFilterNode","OffsetImageFilter","OffsetImageFilterNode","MorphologyImageFilter","MorphologyImageFilterNode","RuntimeShaderImageFilter","RuntimeShaderImageFilterNode","MatrixColorFilter","MatrixColorFilterNode","BlendColorFilter","BlendColorFilterNode","LumaColorFilter","LumaColorFilterNode","LinearToSRGBGammaColorFilter","LinearToSRGBGammaColorFilterNode","SRGBToLinearGammaColorFilter","SRGBToLinearGammaColorFilterNode","LerpColorFilter","LerpColorFilterNode","Shader","ShaderNode","ImageShader","ImageShaderNode","ColorShader","ColorNode","SweepGradient","SweepGradientNode","Turbulence","TurbulenceNode","FractalNoise","FractalNoiseNode","LinearGradient","LinearGradientNode","RadialGradient","RadialGradientNode","TwoPointConicalGradient","TwoPointConicalGradientNode","CornerPathEffect","CornerPathEffectNode","DiscretePathEffect","DiscretePathEffectNode","DashPathEffect","DashPathEffectNode","Path1DPathEffect","Path1DPathEffectNode","Path2DPathEffect","Path2DPathEffectNode","SumPathEffect","SumPathEffectNode","Line2DPathEffect","Line2DPathEffectNode","Blend","BlendNode","BackdropFilter","BackdropFilterNode","Box","BoxNode","BoxShadow","BoxShadowNode"],"mappings":"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","sourcesContent":["import type {\n  PathProps,\n  SkDOM,\n  GroupProps,\n  ImageProps,\n  BlurImageFilterProps,\n  MatrixColorFilterProps,\n  CircleProps,\n  BlurMaskFilterProps,\n  LinearGradientProps,\n  PaintProps,\n  ShaderProps,\n  ImageShaderProps,\n  CustomDrawingNodeProps,\n  LineProps,\n  OvalProps,\n  PatchProps,\n  PointsProps,\n  RectProps,\n  RoundedRectProps,\n  VerticesProps,\n  TextProps,\n  DiffRectProps,\n  OffsetImageFilterProps,\n  BlendColorFilterProps,\n  TextPathProps,\n  TextBlobProps,\n  GlyphsProps,\n  TwoPointConicalGradientProps,\n  TurbulenceProps,\n  SweepGradientProps,\n  RadialGradientProps,\n  FractalNoiseProps,\n  ColorProps,\n  PictureProps,\n  ImageSVGProps,\n  LerpColorFilterProps,\n  DrawingNodeProps,\n  BoxProps,\n  BoxShadowProps,\n  ChildrenProps,\n} from \"../types\";\nimport type {\n  BlendImageFilterProps,\n  BlendProps,\n  DisplacementMapImageFilterProps,\n  DropShadowImageFilterProps,\n  MorphologyImageFilterProps,\n  RuntimeShaderImageFilterProps,\n} from \"../types/ImageFilters\";\nimport type {\n  CornerPathEffectProps,\n  DashPathEffectProps,\n  DiscretePathEffectProps,\n  Line2DPathEffectProps,\n  Path1DPathEffectProps,\n  Path2DPathEffectProps,\n} from \"../types/PathEffects\";\n\nimport {\n  FillNode,\n  ImageNode,\n  CircleNode,\n  PathNode,\n  LineNode,\n  PatchNode,\n  PointsNode,\n  RectNode,\n  RRectNode,\n  VerticesNode,\n  TextNode,\n  OvalNode,\n  CustomDrawingNode,\n  TextPathNode,\n  TextBlobNode,\n  GlyphsNode,\n  DiffRectNode,\n  PictureNode,\n  ImageSVGNode,\n  BackdropFilterNode,\n  BoxNode,\n  BoxShadowNode,\n} from \"./drawings\";\nimport {\n  BlendImageFilterNode,\n  BlurImageFilterNode,\n  BlurMaskFilterNode,\n  DisplacementMapImageFilterNode,\n  DropShadowImageFilterNode,\n  OffsetImageFilterNode,\n  RuntimeShaderImageFilterNode,\n  CornerPathEffectNode,\n  DiscretePathEffectNode,\n  DashPathEffectNode,\n  Path1DPathEffectNode,\n  Path2DPathEffectNode,\n  SumPathEffectNode,\n  Line2DPathEffectNode,\n  BlendNode,\n} from \"./paint\";\nimport {\n  MatrixColorFilterNode,\n  LumaColorFilterNode,\n  LinearToSRGBGammaColorFilterNode,\n  SRGBToLinearGammaColorFilterNode,\n  BlendColorFilterNode,\n  LerpColorFilterNode,\n} from \"./paint/ColorFilters\";\nimport {\n  LinearGradientNode,\n  ShaderNode,\n  ImageShaderNode,\n  TwoPointConicalGradientNode,\n  TurbulenceNode,\n  SweepGradientNode,\n  RadialGradientNode,\n  FractalNoiseNode,\n  ColorNode,\n} from \"./paint/Shaders\";\nimport { MorphologyImageFilterNode } from \"./paint/ImageFilters\";\nimport { GroupNode } from \"./GroupNode\";\nimport { PaintNode } from \"./PaintNode\";\nimport type { NodeContext } from \"./Node\";\n\nexport class JsiSkDOM implements SkDOM {\n  constructor(private ctx: NodeContext) {}\n\n  Group(props?: GroupProps) {\n    return new GroupNode(this.ctx, props ?? {});\n  }\n\n  Paint(props: PaintProps) {\n    return new PaintNode(this.ctx, props);\n  }\n\n  // Drawings\n  Fill(props?: DrawingNodeProps) {\n    return new FillNode(this.ctx, props);\n  }\n\n  Image(props: ImageProps) {\n    return new ImageNode(this.ctx, props);\n  }\n\n  Circle(props: CircleProps) {\n    return new CircleNode(this.ctx, props);\n  }\n\n  Path(props: PathProps) {\n    return new PathNode(this.ctx, props);\n  }\n\n  CustomDrawing(props: CustomDrawingNodeProps) {\n    return new CustomDrawingNode(this.ctx, props);\n  }\n\n  Line(props: LineProps) {\n    return new LineNode(this.ctx, props);\n  }\n\n  Oval(props: OvalProps) {\n    return new OvalNode(this.ctx, props);\n  }\n\n  Patch(props: PatchProps) {\n    return new PatchNode(this.ctx, props);\n  }\n\n  Points(props: PointsProps) {\n    return new PointsNode(this.ctx, props);\n  }\n\n  Rect(props: RectProps) {\n    return new RectNode(this.ctx, props);\n  }\n\n  RRect(props: RoundedRectProps) {\n    return new RRectNode(this.ctx, props);\n  }\n\n  Vertices(props: VerticesProps) {\n    return new VerticesNode(this.ctx, props);\n  }\n\n  Text(props: TextProps) {\n    return new TextNode(this.ctx, props);\n  }\n\n  TextPath(props: TextPathProps) {\n    return new TextPathNode(this.ctx, props);\n  }\n\n  TextBlob(props: TextBlobProps) {\n    return new TextBlobNode(this.ctx, props);\n  }\n\n  Glyphs(props: GlyphsProps) {\n    return new GlyphsNode(this.ctx, props);\n  }\n\n  DiffRect(props: DiffRectProps) {\n    return new DiffRectNode(this.ctx, props);\n  }\n\n  Picture(props: PictureProps) {\n    return new PictureNode(this.ctx, props);\n  }\n\n  ImageSVG(props: ImageSVGProps) {\n    return new ImageSVGNode(this.ctx, props);\n  }\n\n  // BlurMaskFilters\n  BlurMaskFilter(props: BlurMaskFilterProps) {\n    return new BlurMaskFilterNode(this.ctx, props);\n  }\n\n  // ImageFilters\n  BlendImageFilter(props: BlendImageFilterProps) {\n    return new BlendImageFilterNode(this.ctx, props);\n  }\n\n  DropShadowImageFilter(props: DropShadowImageFilterProps) {\n    return new DropShadowImageFilterNode(this.ctx, props);\n  }\n\n  DisplacementMapImageFilter(props: DisplacementMapImageFilterProps) {\n    return new DisplacementMapImageFilterNode(this.ctx, props);\n  }\n\n  BlurImageFilter(props: BlurImageFilterProps) {\n    return new BlurImageFilterNode(this.ctx, props);\n  }\n\n  OffsetImageFilter(props: OffsetImageFilterProps) {\n    return new OffsetImageFilterNode(this.ctx, props);\n  }\n\n  MorphologyImageFilter(props: MorphologyImageFilterProps) {\n    return new MorphologyImageFilterNode(this.ctx, props);\n  }\n\n  RuntimeShaderImageFilter(props: RuntimeShaderImageFilterProps) {\n    return new RuntimeShaderImageFilterNode(this.ctx, props);\n  }\n\n  // Color Filters\n  MatrixColorFilter(props: MatrixColorFilterProps) {\n    return new MatrixColorFilterNode(this.ctx, props);\n  }\n\n  BlendColorFilter(props: BlendColorFilterProps) {\n    return new BlendColorFilterNode(this.ctx, props);\n  }\n\n  LumaColorFilter() {\n    return new LumaColorFilterNode(this.ctx);\n  }\n\n  LinearToSRGBGammaColorFilter() {\n    return new LinearToSRGBGammaColorFilterNode(this.ctx);\n  }\n\n  SRGBToLinearGammaColorFilter() {\n    return new SRGBToLinearGammaColorFilterNode(this.ctx);\n  }\n\n  LerpColorFilter(props: LerpColorFilterProps) {\n    return new LerpColorFilterNode(this.ctx, props);\n  }\n\n  // Shaders\n  Shader(props: ShaderProps) {\n    return new ShaderNode(this.ctx, props);\n  }\n\n  ImageShader(props: ImageShaderProps) {\n    return new ImageShaderNode(this.ctx, props);\n  }\n\n  ColorShader(props: ColorProps) {\n    return new ColorNode(this.ctx, props);\n  }\n\n  SweepGradient(props: SweepGradientProps) {\n    return new SweepGradientNode(this.ctx, props);\n  }\n\n  Turbulence(props: TurbulenceProps) {\n    return new TurbulenceNode(this.ctx, props);\n  }\n\n  FractalNoise(props: FractalNoiseProps) {\n    return new FractalNoiseNode(this.ctx, props);\n  }\n\n  LinearGradient(props: LinearGradientProps) {\n    return new LinearGradientNode(this.ctx, props);\n  }\n\n  RadialGradient(props: RadialGradientProps) {\n    return new RadialGradientNode(this.ctx, props);\n  }\n\n  TwoPointConicalGradient(props: TwoPointConicalGradientProps) {\n    return new TwoPointConicalGradientNode(this.ctx, props);\n  }\n\n  // Path Effects\n  CornerPathEffect(props: CornerPathEffectProps) {\n    return new CornerPathEffectNode(this.ctx, props);\n  }\n\n  DiscretePathEffect(props: DiscretePathEffectProps) {\n    return new DiscretePathEffectNode(this.ctx, props);\n  }\n\n  DashPathEffect(props: DashPathEffectProps) {\n    return new DashPathEffectNode(this.ctx, props);\n  }\n\n  Path1DPathEffect(props: Path1DPathEffectProps) {\n    return new Path1DPathEffectNode(this.ctx, props);\n  }\n\n  Path2DPathEffect(props: Path2DPathEffectProps) {\n    return new Path2DPathEffectNode(this.ctx, props);\n  }\n\n  SumPathEffect() {\n    return new SumPathEffectNode(this.ctx);\n  }\n\n  Line2DPathEffect(props: Line2DPathEffectProps) {\n    return new Line2DPathEffectNode(this.ctx, props);\n  }\n\n  Blend(props: BlendProps) {\n    return new BlendNode(this.ctx, props);\n  }\n\n  BackdropFilter(props: ChildrenProps) {\n    return new BackdropFilterNode(this.ctx, props);\n  }\n\n  Box(props: BoxProps) {\n    return new BoxNode(this.ctx, props);\n  }\n\n  BoxShadow(props: BoxShadowProps) {\n    return new BoxShadowNode(this.ctx, props);\n  }\n}\n"]}