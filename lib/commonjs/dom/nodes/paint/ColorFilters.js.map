{"version":3,"sources":["ColorFilters.ts"],"names":["ColorFilterDeclaration","JsiDeclarationNode","constructor","ctx","type","props","DeclarationType","ColorFilter","addChild","child","Error","insertChildBefore","before","compose","filter","children","_children","length","Skia","MakeCompose","reduce","acc","materialize","MatrixColorFilterNode","NodeType","MatrixColorFilter","matrix","cf","MakeMatrix","BlendColorFilterNode","BlendColorFilter","mode","color","MakeBlend","BlendMode","LinearToSRGBGammaColorFilterNode","LinearToSRGBGammaColorFilter","MakeLinearToSRGBGamma","SRGBToLinearGammaColorFilterNode","SRGBToLinearGammaColorFilter","MakeSRGBToLinearGamma","LumaColorFilterNode","LumaColorFilter","MakeLumaColorFilter","LerpColorFilterNode","LerpColorFilter","t","first","second","MakeLerp"],"mappings":"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","sourcesContent":["import { BlendMode } from \"../../../skia/types\";\nimport type { SkColorFilter } from \"../../../skia/types\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\nimport type {\n  BlendColorFilterProps,\n  MatrixColorFilterProps,\n  Node,\n} from \"../../types\";\nimport { DeclarationType, NodeType } from \"../../types\";\nimport { processColor } from \"../datatypes\";\nimport { enumKey } from \"../datatypes/Enum\";\nimport type { LerpColorFilterProps } from \"../../types/ColorFilters\";\n\nexport abstract class ColorFilterDeclaration<\n  P,\n  Nullable extends null | never = never\n> extends JsiDeclarationNode<P, SkColorFilter, Nullable> {\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, DeclarationType.ColorFilter, type, props);\n  }\n\n  addChild(child: Node<unknown>) {\n    if (!(child instanceof ColorFilterDeclaration)) {\n      throw new Error(`Cannot add child of type ${child.type} to ${this.type}`);\n    }\n    super.addChild(child);\n  }\n\n  insertChildBefore(child: Node<unknown>, before: Node<unknown>): void {\n    if (!(child instanceof ColorFilterDeclaration)) {\n      throw new Error(`Cannot add child of type ${child.type} to ${this.type}`);\n    }\n    super.insertChildBefore(child, before);\n  }\n\n  compose(filter: SkColorFilter) {\n    const children = this._children as ColorFilterDeclaration<unknown>[];\n    if (this._children.length === 0) {\n      return filter;\n    } else {\n      return this.Skia.ColorFilter.MakeCompose(\n        filter,\n        children.reduce<SkColorFilter | null>((acc, child) => {\n          if (acc === null) {\n            return child.materialize();\n          }\n          return this.Skia.ColorFilter.MakeCompose(acc, child.materialize());\n        }, null) as SkColorFilter\n      );\n    }\n  }\n}\n\nexport class MatrixColorFilterNode extends ColorFilterDeclaration<MatrixColorFilterProps> {\n  constructor(ctx: NodeContext, props: MatrixColorFilterProps) {\n    super(ctx, NodeType.MatrixColorFilter, props);\n  }\n\n  materialize() {\n    const { matrix } = this.props;\n    const cf = this.Skia.ColorFilter.MakeMatrix(matrix);\n    return this.compose(cf);\n  }\n}\n\nexport class BlendColorFilterNode extends ColorFilterDeclaration<BlendColorFilterProps> {\n  constructor(ctx: NodeContext, props: BlendColorFilterProps) {\n    super(ctx, NodeType.BlendColorFilter, props);\n  }\n\n  materialize() {\n    const { mode } = this.props;\n    const color = processColor(this.Skia, this.props.color, 1);\n    const cf = this.Skia.ColorFilter.MakeBlend(color, BlendMode[enumKey(mode)]);\n    return this.compose(cf);\n  }\n}\n\nexport class LinearToSRGBGammaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.LinearToSRGBGammaColorFilter, null);\n  }\n\n  materialize() {\n    const cf = this.Skia.ColorFilter.MakeLinearToSRGBGamma();\n    return this.compose(cf);\n  }\n}\n\nexport class SRGBToLinearGammaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.SRGBToLinearGammaColorFilter, null);\n  }\n\n  materialize() {\n    const cf = this.Skia.ColorFilter.MakeSRGBToLinearGamma();\n    return this.compose(cf);\n  }\n}\n\nexport class LumaColorFilterNode extends ColorFilterDeclaration<null> {\n  constructor(ctx: NodeContext) {\n    super(ctx, NodeType.LumaColorFilter, null);\n  }\n\n  materialize() {\n    const cf = this.Skia.ColorFilter.MakeLumaColorFilter();\n    return this.compose(cf);\n  }\n}\n\nexport class LerpColorFilterNode extends ColorFilterDeclaration<LerpColorFilterProps> {\n  constructor(ctx: NodeContext, props: LerpColorFilterProps) {\n    super(ctx, NodeType.LerpColorFilter, props);\n  }\n\n  materialize() {\n    const { t } = this.props;\n    const [first, second] = this.children() as JsiDeclarationNode<\n      unknown,\n      SkColorFilter\n    >[];\n    return this.Skia.ColorFilter.MakeLerp(\n      t,\n      first.materialize(),\n      second.materialize()\n    );\n  }\n}\n"]}