{"version":3,"sources":["ImageFilters.ts"],"names":["Black","Float32Array","of","MakeInnerShadow","Skia","shadowOnly","dx","dy","sigmaX","sigmaY","color","input","sourceGraphic","ImageFilter","MakeColorFilter","ColorFilter","MakeBlend","BlendMode","Dst","sourceAlpha","SrcIn","f1","SrcOut","f2","MakeOffset","f3","MakeBlur","TileMode","Decal","f4","MakeCompose","SrcOver","ImageFilterDeclaration","JsiDeclarationNode","constructor","ctx","type","props","DeclarationType","getOptionalChildInstance","index","child","_children","getMandatoryChildInstance","isImageFilter","materialize","isShader","MakeShader","declarationType","Error","OffsetImageFilterNode","NodeType","OffsetImageFilter","x","y","DisplacementMapImageFilterNode","DisplacementMapImageFilter","channelX","channelY","scale","MakeDisplacementMap","ColorChannel","BlurImageFilterNode","BlurImageFilter","mode","blur","sigma","DropShadowImageFilterNode","cl","inner","factory","bind","MakeDropShadowOnly","MakeDropShadow","MorphologyOperator","MorphologyImageFilterNode","MorphologyImageFilter","operator","r","radius","Erode","MakeErode","MakeDilate","BlendImageFilterNode","BlendImageFilter","a","b","RuntimeShaderImageFilterNode","RuntimeShaderImageFilter","source","uniforms","rtb","RuntimeShaderBuilder","MakeRuntimeShader"],"mappings":"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","sourcesContent":["import type { SkImageFilter, SkColor, Skia } from \"../../../skia/types\";\nimport {\n  BlendMode,\n  ColorChannel,\n  processUniforms,\n  TileMode,\n} from \"../../../skia/types\";\nimport type {\n  BlendImageFilterProps,\n  BlurImageFilterProps,\n  DisplacementMapImageFilterProps,\n  DropShadowImageFilterProps,\n  MorphologyImageFilterProps,\n  OffsetImageFilterProps,\n  RuntimeShaderImageFilterProps,\n} from \"../../types\";\nimport { DeclarationType, NodeType } from \"../../types\";\nimport { processRadius, enumKey, processColor } from \"../datatypes\";\nimport type { NodeContext } from \"../Node\";\nimport { JsiDeclarationNode } from \"../Node\";\n\nconst Black = Float32Array.of(0, 0, 0, 1);\n\nconst MakeInnerShadow = (\n  Skia: Skia,\n  shadowOnly: boolean | undefined,\n  dx: number,\n  dy: number,\n  sigmaX: number,\n  sigmaY: number,\n  color: SkColor,\n  input: SkImageFilter | null\n) => {\n  const sourceGraphic = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.Dst),\n    null\n  );\n  const sourceAlpha = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(Black, BlendMode.SrcIn),\n    null\n  );\n  const f1 = Skia.ImageFilter.MakeColorFilter(\n    Skia.ColorFilter.MakeBlend(color, BlendMode.SrcOut),\n    null\n  );\n  const f2 = Skia.ImageFilter.MakeOffset(dx, dy, f1);\n  const f3 = Skia.ImageFilter.MakeBlur(sigmaX, sigmaY, TileMode.Decal, f2);\n  const f4 = Skia.ImageFilter.MakeBlend(BlendMode.SrcIn, sourceAlpha, f3);\n  if (shadowOnly) {\n    return f4;\n  }\n  return Skia.ImageFilter.MakeCompose(\n    input,\n    Skia.ImageFilter.MakeBlend(BlendMode.SrcOver, sourceGraphic, f4)\n  );\n};\n\nexport abstract class ImageFilterDeclaration<\n  P,\n  Nullable extends null | never = never\n> extends JsiDeclarationNode<P, SkImageFilter, Nullable> {\n  constructor(ctx: NodeContext, type: NodeType, props: P) {\n    super(ctx, DeclarationType.ImageFilter, type, props);\n  }\n\n  getOptionalChildInstance(index: number) {\n    const child = this._children[index];\n    if (!child) {\n      return null;\n    }\n    return this.getMandatoryChildInstance(index);\n  }\n\n  getMandatoryChildInstance(index: number) {\n    const child = this._children[index];\n    if (child instanceof JsiDeclarationNode) {\n      if (child.isImageFilter()) {\n        return child.materialize();\n      } else if (child.isShader()) {\n        return this.Skia.ImageFilter.MakeShader(child.materialize(), null);\n      } else if (child.declarationType === DeclarationType.ColorFilter) {\n        return this.Skia.ImageFilter.MakeColorFilter(child.materialize(), null);\n      } else {\n        throw new Error(`Found invalid child ${child.type} in ${this.type}`);\n      }\n    } else {\n      throw new Error(`Found invalid child ${child.type} in ${this.type}`);\n    }\n  }\n}\n\nexport class OffsetImageFilterNode extends ImageFilterDeclaration<OffsetImageFilterProps> {\n  constructor(ctx: NodeContext, props: OffsetImageFilterProps) {\n    super(ctx, NodeType.OffsetImageFilter, props);\n  }\n\n  materialize() {\n    const { x, y } = this.props;\n    return this.Skia.ImageFilter.MakeOffset(\n      x,\n      y,\n      this.getOptionalChildInstance(0)\n    );\n  }\n}\n\nexport class DisplacementMapImageFilterNode extends ImageFilterDeclaration<DisplacementMapImageFilterProps> {\n  constructor(ctx: NodeContext, props: DisplacementMapImageFilterProps) {\n    super(ctx, NodeType.DisplacementMapImageFilter, props);\n  }\n\n  materialize() {\n    const { channelX, channelY, scale } = this.props;\n    return this.Skia.ImageFilter.MakeDisplacementMap(\n      ColorChannel[enumKey(channelX)],\n      ColorChannel[enumKey(channelY)],\n      scale,\n      this.getMandatoryChildInstance(0),\n      this.getOptionalChildInstance(1)\n    );\n  }\n}\n\nexport class BlurImageFilterNode extends ImageFilterDeclaration<BlurImageFilterProps> {\n  constructor(ctx: NodeContext, props: BlurImageFilterProps) {\n    super(ctx, NodeType.BlurImageFilter, props);\n  }\n\n  materialize() {\n    const { mode, blur } = this.props;\n    const sigma = processRadius(this.Skia, blur);\n    return this.Skia.ImageFilter.MakeBlur(\n      sigma.x,\n      sigma.y,\n      TileMode[enumKey(mode)],\n      this.getOptionalChildInstance(0)\n    );\n  }\n}\n\nexport class DropShadowImageFilterNode extends ImageFilterDeclaration<DropShadowImageFilterProps> {\n  constructor(ctx: NodeContext, props: DropShadowImageFilterProps) {\n    super(ctx, NodeType.BlurImageFilter, props);\n  }\n\n  materialize() {\n    const { dx, dy, blur, shadowOnly, color: cl, inner } = this.props;\n    const color = processColor(this.Skia, cl, 1);\n    const input = this.getOptionalChildInstance(0);\n    let factory;\n    if (inner) {\n      factory = MakeInnerShadow.bind(null, this.Skia, shadowOnly);\n    } else {\n      factory = shadowOnly\n        ? this.Skia.ImageFilter.MakeDropShadowOnly.bind(this.Skia.ImageFilter)\n        : this.Skia.ImageFilter.MakeDropShadow.bind(this.Skia.ImageFilter);\n    }\n    return factory(dx, dy, blur, blur, color, input);\n  }\n}\n\nexport enum MorphologyOperator {\n  Erode,\n  Dilate,\n}\n\nexport class MorphologyImageFilterNode extends ImageFilterDeclaration<MorphologyImageFilterProps> {\n  constructor(ctx: NodeContext, props: MorphologyImageFilterProps) {\n    super(ctx, NodeType.MorphologyImageFilter, props);\n  }\n\n  materialize() {\n    const { operator } = this.props;\n    const r = processRadius(this.Skia, this.props.radius);\n    const input = this.getOptionalChildInstance(0);\n    if (MorphologyOperator[enumKey(operator)] === MorphologyOperator.Erode) {\n      return this.Skia.ImageFilter.MakeErode(r.x, r.y, input);\n    }\n    return this.Skia.ImageFilter.MakeDilate(r.x, r.y, input);\n  }\n}\n\nexport class BlendImageFilterNode extends ImageFilterDeclaration<BlendImageFilterProps> {\n  constructor(ctx: NodeContext, props: BlendImageFilterProps) {\n    super(ctx, NodeType.BlendImageFilter, props);\n  }\n\n  materialize() {\n    const { mode } = this.props;\n    const a = this.getMandatoryChildInstance(0);\n    const b = this.getMandatoryChildInstance(1);\n    return this.Skia.ImageFilter.MakeBlend(mode, a, b);\n  }\n}\n\nexport class RuntimeShaderImageFilterNode extends ImageFilterDeclaration<RuntimeShaderImageFilterProps> {\n  constructor(ctx: NodeContext, props: RuntimeShaderImageFilterProps) {\n    super(ctx, NodeType.RuntimeShaderImageFilter, props);\n  }\n\n  materialize() {\n    const { source, uniforms } = this.props;\n    const rtb = this.Skia.RuntimeShaderBuilder(source);\n    if (uniforms) {\n      processUniforms(source, uniforms, rtb);\n    }\n    const input = this.getOptionalChildInstance(0);\n    return this.Skia.ImageFilter.MakeRuntimeShader(rtb, null, input);\n  }\n}\n"]}