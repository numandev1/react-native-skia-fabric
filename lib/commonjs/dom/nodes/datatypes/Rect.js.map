{"version":3,"sources":["Rect.ts"],"names":["isEdge","pos","b","x","y","width","height","isRRectCtor","def","rect","undefined","isRectCtor","processRect","Skia","XYWHRect","processRRect","r","RRectXY"],"mappings":";;;;;;;AAIA;;AAJA;AAMO,MAAMA,MAAM,GAAG,CAACC,GAAD,EAAcC,CAAd,KACpBD,GAAG,CAACE,CAAJ,KAAUD,CAAC,CAACC,CAAZ,IAAiBF,GAAG,CAACG,CAAJ,KAAUF,CAAC,CAACE,CAA7B,IAAkCH,GAAG,CAACE,CAAJ,KAAUD,CAAC,CAACG,KAA9C,IAAuDJ,GAAG,CAACG,CAAJ,KAAUF,CAAC,CAACI,MAD9D,C,CAGP;;;;;AACA,MAAMC,WAAW,GAAIC,GAAD,IACjBA,GAAD,CAAaC,IAAb,KAAsBC,SADxB,C,CAEA;;;AACA,MAAMC,UAAU,GAAIH,GAAD,IAChBA,GAAD,CAAaC,IAAb,KAAsBC,SADxB;;AAGO,MAAME,WAAW,GAAG,CAACC,IAAD,EAAaL,GAAb,KAA8B;AACvD,MAAIG,UAAU,CAACH,GAAD,CAAd,EAAqB;AACnB,WAAOK,IAAI,CAACC,QAAL,CAAcN,GAAG,CAACL,CAAlB,EAAqBK,GAAG,CAACJ,CAAzB,EAA4BI,GAAG,CAACH,KAAhC,EAAuCG,GAAG,CAACF,MAA3C,CAAP;AACD,GAFD,MAEO;AACL,WAAOE,GAAG,CAACC,IAAX;AACD;AACF,CANM;;;;AAQA,MAAMM,YAAY,GAAG,CAACF,IAAD,EAAaL,GAAb,KAA+B;AACzD,MAAID,WAAW,CAACC,GAAD,CAAf,EAAsB;AACpB,UAAMQ,CAAC,GAAG,2BAAcH,IAAd,EAAoBL,GAAG,CAACQ,CAAxB,CAAV;AACA,WAAOH,IAAI,CAACI,OAAL,CACLJ,IAAI,CAACC,QAAL,CAAcN,GAAG,CAACL,CAAlB,EAAqBK,GAAG,CAACJ,CAAzB,EAA4BI,GAAG,CAACH,KAAhC,EAAuCG,GAAG,CAACF,MAA3C,CADK,EAELU,CAAC,CAACb,CAFG,EAGLa,CAAC,CAACZ,CAHG,CAAP;AAKD,GAPD,MAOO;AACL,WAAOI,GAAG,CAACC,IAAX;AACD;AACF,CAXM","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Skia, SkRect, Vector } from \"../../../skia/types\";\nimport type { RectCtor, RectDef, RRectCtor, RRectDef } from \"../../types\";\n\nimport { processRadius } from \"./Radius\";\n\nexport const isEdge = (pos: Vector, b: SkRect) =>\n  pos.x === b.x || pos.y === b.y || pos.x === b.width || pos.y === b.height;\n\n// We have an issue to check property existence on JSI backed instances\nconst isRRectCtor = (def: RRectDef): def is RRectCtor =>\n  (def as any).rect === undefined;\n// We have an issue to check property existence on JSI backed instances\nconst isRectCtor = (def: RectDef): def is RectCtor =>\n  (def as any).rect === undefined;\n\nexport const processRect = (Skia: Skia, def: RectDef) => {\n  if (isRectCtor(def)) {\n    return Skia.XYWHRect(def.x, def.y, def.width, def.height);\n  } else {\n    return def.rect;\n  }\n};\n\nexport const processRRect = (Skia: Skia, def: RRectDef) => {\n  if (isRRectCtor(def)) {\n    const r = processRadius(Skia, def.r);\n    return Skia.RRectXY(\n      Skia.XYWHRect(def.x, def.y, def.width, def.height),\n      r.x,\n      r.y\n    );\n  } else {\n    return def.rect;\n  }\n};\n"]}