{"version":3,"sources":["Path.ts"],"names":["processPath","Skia","rawPath","path","Path","MakeFromSVGString","Error","isPathDef","def"],"mappings":";;;;;;;AACA;;AAGO,MAAMA,WAAW,GAAG,CAACC,IAAD,EAAaC,OAAb,KAAkC;AAC3D,QAAMC,IAAI,GACR,OAAOD,OAAP,KAAmB,QAAnB,GACID,IAAI,CAACG,IAAL,CAAUC,iBAAV,CAA4BH,OAA5B,CADJ,GAEIA,OAHN;;AAIA,MAAI,CAACC,IAAL,EAAW;AACT,UAAM,IAAIG,KAAJ,CAAU,mBAAmBJ,OAA7B,CAAN;AACD;;AACD,SAAOC,IAAP;AACD,CATM,C,CAWP;;;;;AACO,MAAMI,SAAS,GAAIC,GAAD,IACvB,OAAOA,GAAP,KAAe,QAAf,IAA2B,mBAAOA,GAAP,CADtB","sourcesContent":["import type { Skia } from \"../../../skia/types\";\nimport { isPath } from \"../../../skia/types\";\nimport type { PathDef } from \"../../types\";\n\nexport const processPath = (Skia: Skia, rawPath: PathDef) => {\n  const path =\n    typeof rawPath === \"string\"\n      ? Skia.Path.MakeFromSVGString(rawPath)\n      : rawPath;\n  if (!path) {\n    throw new Error(\"Invalid path: \" + rawPath);\n  }\n  return path;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isPathDef = (def: any): def is PathDef =>\n  typeof def === \"string\" || isPath(def);\n"]}